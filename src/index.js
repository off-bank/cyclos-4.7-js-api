/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Account', 'model/AccountHistoryOrderByEnum', 'model/AccountHistoryResult', 'model/AccountHistoryStatus', 'model/AccountKind', 'model/AccountPermissions', 'model/AccountStatus', 'model/AccountWithCurrency', 'model/AccountWithHistoryStatus', 'model/AccountWithOwner', 'model/AccountWithStatus', 'model/ActivateClientResult', 'model/Ad', 'model/AdBasicData', 'model/AdCategoryWithChildren', 'model/AdCategoryWithParent', 'model/AdDataForEdit', 'model/AdDataForNew', 'model/AdDataForSearch', 'model/AdDetailed', 'model/AdEdit', 'model/AdKind', 'model/AdManage', 'model/AdNew', 'model/AdOrderByEnum', 'model/AdResult', 'model/AdStatusEnum', 'model/AdView', 'model/Address', 'model/AddressBasicData', 'model/AddressConfiguration', 'model/AddressConfigurationForUserRegistration', 'model/AddressDataForEdit', 'model/AddressDataForNew', 'model/AddressEdit', 'model/AddressFieldEnum', 'model/AddressInSearchResultEnum', 'model/AddressManage', 'model/AddressNew', 'model/AddressResult', 'model/AddressView', 'model/Agreement', 'model/AgreementContent', 'model/AmountSummary', 'model/Auth', 'model/Authorization', 'model/AuthorizationLevelData', 'model/AuthorizationPermissions', 'model/AuthorizationStatusEnum', 'model/AvailabilityEnum', 'model/BadRequestError', 'model/BadRequestErrorCode', 'model/BalanceLevelEnum', 'model/BaseNfcError', 'model/BaseTransferDataForSearch', 'model/BaseUserDataForSearch', 'model/BasicAdDataForSearch', 'model/BasicProfileFieldEnum', 'model/BasicProfileFieldInput', 'model/BuyVoucher', 'model/BuyVoucherError', 'model/BuyVoucherErrorCode', 'model/CaptchaProviderEnum', 'model/CaptchaResponse', 'model/ChangeForgottenPassword', 'model/ChangePassword', 'model/ClientStatusEnum', 'model/ClientView', 'model/CodeVerificationStatusEnum', 'model/ConflictError', 'model/ConflictErrorCode', 'model/Country', 'model/Currency', 'model/CustomField', 'model/CustomFieldControlEnum', 'model/CustomFieldDetailed', 'model/CustomFieldDynamicValue', 'model/CustomFieldPossibleValue', 'model/CustomFieldSizeEnum', 'model/CustomFieldTypeEnum', 'model/CustomFieldValue', 'model/DataForAccountHistory', 'model/DataForChangeForgottenPassword', 'model/DataForLogin', 'model/DataForMobileGuest', 'model/DataForMobileUser', 'model/DataForTransaction', 'model/DataForUserBalancesSearch', 'model/DataForUserPasswords', 'model/DateFormatEnum', 'model/DatePeriod', 'model/DistanceEnum', 'model/Entity', 'model/EntityReference', 'model/Error', 'model/ErrorKind', 'model/ExternalPaymentStatusEnum', 'model/ForbiddenError', 'model/ForbiddenErrorCode', 'model/ForgottenPasswordRequest', 'model/GeneralOperatorsDataForSearch', 'model/GeographicalCoordinate', 'model/Group', 'model/GroupForRegistration', 'model/GroupKind', 'model/IAddress', 'model/IPhone', 'model/IPhoneDetailed', 'model/IUser', 'model/IdentificationMethodEnum', 'model/Image', 'model/ImageKind', 'model/ImageSizeEnum', 'model/ImageView', 'model/ImagesListData', 'model/InitializeNfcError', 'model/InitializeNfcErrorCode', 'model/InputError', 'model/InputErrorCode', 'model/InternalNamedEntity', 'model/InternalTransactionPreview', 'model/LinkedEntityTypeEnum', 'model/MarketplacePermissions', 'model/MaturityPolicyEnum', 'model/MobileBaseData', 'model/MobileOperationEnum', 'model/MobilePage', 'model/MobileTranslations', 'model/NamedEntity', 'model/NfcAuthError', 'model/NfcAuthErrorCode', 'model/NfcDataForInitialize', 'model/NfcDataForPersonalize', 'model/NfcExternalAuthenticateParameter', 'model/NfcExternalAuthenticateResult', 'model/NfcInitializeParameter', 'model/NfcInitializeResult', 'model/NfcPersonalizeOtpParameter', 'model/NfcPersonalizeParameter', 'model/NfcTagKeyEnum', 'model/NfcTokenParameter', 'model/NotFoundError', 'model/NotificationLevelEnum', 'model/NumberFormatEnum', 'model/Operation', 'model/OperationDataForRun', 'model/OperationPageContextEnum', 'model/OperationResultTypeEnum', 'model/OperationRowActionEnum', 'model/OperationScopeEnum', 'model/OtpError', 'model/OtpErrorCode', 'model/OutboundSmsStatusEnum', 'model/OwnerRecordPermissions', 'model/PasswordInput', 'model/PasswordInputMethodEnum', 'model/PasswordModeEnum', 'model/PasswordPermissions', 'model/PasswordRegistration', 'model/PasswordStatusAndPermissions', 'model/PasswordStatusEnum', 'model/PasswordType', 'model/PasswordTypeRegistration', 'model/PaymentError', 'model/PaymentErrorCode', 'model/PaymentPreview', 'model/PaymentRequestStatusEnum', 'model/PaymentSchedulingEnum', 'model/PerformInternalTransaction', 'model/PerformPayment', 'model/PerformScheduledPaymentInstallment', 'model/PerformTransaction', 'model/Permissions', 'model/PersonalizeNfcError', 'model/PersonalizeNfcErrorCode', 'model/Phone', 'model/PhoneBasicData', 'model/PhoneConfiguration', 'model/PhoneConfigurationForUserRegistration', 'model/PhoneDataForEdit', 'model/PhoneDataForNew', 'model/PhoneEdit', 'model/PhoneKind', 'model/PhoneManage', 'model/PhoneNew', 'model/PhoneResult', 'model/PhoneView', 'model/PhysicalTokenTypeEnum', 'model/PosError', 'model/PosErrorCode', 'model/PreselectedPeriod', 'model/Principal', 'model/PrincipalType', 'model/PrincipalTypeInput', 'model/PrincipalTypeKind', 'model/ProfileFieldActions', 'model/Record', 'model/RecordBasePermissions', 'model/RecordBasicData', 'model/RecordDataForEdit', 'model/RecordDataForNew', 'model/RecordDataForSearch', 'model/RecordDataForSharedSearch', 'model/RecordEdit', 'model/RecordKind', 'model/RecordLayoutEnum', 'model/RecordManage', 'model/RecordNew', 'model/RecordResult', 'model/RecordType', 'model/RecordTypeWithMenu', 'model/RecordView', 'model/RecordWithOwnerResult', 'model/RecurringPaymentOccurrence', 'model/RecurringPaymentOccurrenceStatusEnum', 'model/RecurringPaymentStatusEnum', 'model/RedeemVoucher', 'model/RedeemVoucherError', 'model/RedeemVoucherErrorCode', 'model/RoleEnum', 'model/RunOperation', 'model/RunOperationResult', 'model/RunOperationResultColumn', 'model/RunOperationResultRow', 'model/ScheduledPaymentInstallment', 'model/ScheduledPaymentInstallmentPreview', 'model/ScheduledPaymentInstallmentStatusEnum', 'model/ScheduledPaymentStatusEnum', 'model/SearchByDistanceData', 'model/SendMediumEnum', 'model/TimeFieldEnum', 'model/TimeFormatEnum', 'model/TimeInterval', 'model/Token', 'model/TokenDetailed', 'model/TokenStatusEnum', 'model/TokenType', 'model/TokenTypeEnum', 'model/Transaction', 'model/TransactionDataForSearch', 'model/TransactionKind', 'model/TransactionPreview', 'model/TransactionResult', 'model/TransactionSubjectsEnum', 'model/TransactionTypeData', 'model/TransactionView', 'model/Transfer', 'model/TransferDataForSearch', 'model/TransferFeePreview', 'model/TransferFilter', 'model/TransferKind', 'model/TransferStatus', 'model/TransferStatusFlow', 'model/TransferStatusFlowForTransferView', 'model/TransferStatusLog', 'model/TransferType', 'model/TransferView', 'model/UIElementWithContent', 'model/UnauthorizedError', 'model/UnauthorizedErrorCode', 'model/User', 'model/UserAdDataForSearch', 'model/UserAddressesListData', 'model/UserBalancesOrderByEnum', 'model/UserBalancesSummary', 'model/UserBasicData', 'model/UserClientTypePermissions', 'model/UserContactPermissions', 'model/UserCustomFieldValue', 'model/UserDataForEdit', 'model/UserDataForMap', 'model/UserDataForNew', 'model/UserDataForSearch', 'model/UserEdit', 'model/UserImageKind', 'model/UserManage', 'model/UserMarketplacePermissions', 'model/UserNew', 'model/UserOperatorsDataForSearch', 'model/UserOrderByEnum', 'model/UserPaymentPermissions', 'model/UserPermissions', 'model/UserPhonesListData', 'model/UserProfilePermissions', 'model/UserRegistrationPrincipal', 'model/UserRegistrationResult', 'model/UserRegistrationStatusEnum', 'model/UserResult', 'model/UserStatusEnum', 'model/UserView', 'model/UserVouchersDataForSearch', 'model/UserWithBalanceResult', 'model/UsersPermissions', 'model/VersionedEntity', 'model/Voucher', 'model/VoucherBasicData', 'model/VoucherConfiguration', 'model/VoucherCreationTypeEnum', 'model/VoucherDataForBuy', 'model/VoucherDataForRedeem', 'model/VoucherInitialDataForRedeem', 'model/VoucherRedeemResult', 'model/VoucherRelationEnum', 'model/VoucherResult', 'model/VoucherStatusEnum', 'model/VoucherType', 'model/VoucherView', 'model/WeekDayEnum', 'api/AccountsApi', 'api/AddressesApi', 'api/AgreementsApi', 'api/AuthApi', 'api/CaptchaApi', 'api/ClientsApi', 'api/ContactsApi', 'api/ImagesApi', 'api/MarketplaceApi', 'api/MobileApi', 'api/NFCApi', 'api/OperationsApi', 'api/OperatorsApi', 'api/POSApi', 'api/PasswordsApi', 'api/PaymentsApi', 'api/PhonesApi', 'api/RecordsApi', 'api/TransactionsApi', 'api/TransfersApi', 'api/UsersApi', 'api/VouchersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Account'), require('./model/AccountHistoryOrderByEnum'), require('./model/AccountHistoryResult'), require('./model/AccountHistoryStatus'), require('./model/AccountKind'), require('./model/AccountPermissions'), require('./model/AccountStatus'), require('./model/AccountWithCurrency'), require('./model/AccountWithHistoryStatus'), require('./model/AccountWithOwner'), require('./model/AccountWithStatus'), require('./model/ActivateClientResult'), require('./model/Ad'), require('./model/AdBasicData'), require('./model/AdCategoryWithChildren'), require('./model/AdCategoryWithParent'), require('./model/AdDataForEdit'), require('./model/AdDataForNew'), require('./model/AdDataForSearch'), require('./model/AdDetailed'), require('./model/AdEdit'), require('./model/AdKind'), require('./model/AdManage'), require('./model/AdNew'), require('./model/AdOrderByEnum'), require('./model/AdResult'), require('./model/AdStatusEnum'), require('./model/AdView'), require('./model/Address'), require('./model/AddressBasicData'), require('./model/AddressConfiguration'), require('./model/AddressConfigurationForUserRegistration'), require('./model/AddressDataForEdit'), require('./model/AddressDataForNew'), require('./model/AddressEdit'), require('./model/AddressFieldEnum'), require('./model/AddressInSearchResultEnum'), require('./model/AddressManage'), require('./model/AddressNew'), require('./model/AddressResult'), require('./model/AddressView'), require('./model/Agreement'), require('./model/AgreementContent'), require('./model/AmountSummary'), require('./model/Auth'), require('./model/Authorization'), require('./model/AuthorizationLevelData'), require('./model/AuthorizationPermissions'), require('./model/AuthorizationStatusEnum'), require('./model/AvailabilityEnum'), require('./model/BadRequestError'), require('./model/BadRequestErrorCode'), require('./model/BalanceLevelEnum'), require('./model/BaseNfcError'), require('./model/BaseTransferDataForSearch'), require('./model/BaseUserDataForSearch'), require('./model/BasicAdDataForSearch'), require('./model/BasicProfileFieldEnum'), require('./model/BasicProfileFieldInput'), require('./model/BuyVoucher'), require('./model/BuyVoucherError'), require('./model/BuyVoucherErrorCode'), require('./model/CaptchaProviderEnum'), require('./model/CaptchaResponse'), require('./model/ChangeForgottenPassword'), require('./model/ChangePassword'), require('./model/ClientStatusEnum'), require('./model/ClientView'), require('./model/CodeVerificationStatusEnum'), require('./model/ConflictError'), require('./model/ConflictErrorCode'), require('./model/Country'), require('./model/Currency'), require('./model/CustomField'), require('./model/CustomFieldControlEnum'), require('./model/CustomFieldDetailed'), require('./model/CustomFieldDynamicValue'), require('./model/CustomFieldPossibleValue'), require('./model/CustomFieldSizeEnum'), require('./model/CustomFieldTypeEnum'), require('./model/CustomFieldValue'), require('./model/DataForAccountHistory'), require('./model/DataForChangeForgottenPassword'), require('./model/DataForLogin'), require('./model/DataForMobileGuest'), require('./model/DataForMobileUser'), require('./model/DataForTransaction'), require('./model/DataForUserBalancesSearch'), require('./model/DataForUserPasswords'), require('./model/DateFormatEnum'), require('./model/DatePeriod'), require('./model/DistanceEnum'), require('./model/Entity'), require('./model/EntityReference'), require('./model/Error'), require('./model/ErrorKind'), require('./model/ExternalPaymentStatusEnum'), require('./model/ForbiddenError'), require('./model/ForbiddenErrorCode'), require('./model/ForgottenPasswordRequest'), require('./model/GeneralOperatorsDataForSearch'), require('./model/GeographicalCoordinate'), require('./model/Group'), require('./model/GroupForRegistration'), require('./model/GroupKind'), require('./model/IAddress'), require('./model/IPhone'), require('./model/IPhoneDetailed'), require('./model/IUser'), require('./model/IdentificationMethodEnum'), require('./model/Image'), require('./model/ImageKind'), require('./model/ImageSizeEnum'), require('./model/ImageView'), require('./model/ImagesListData'), require('./model/InitializeNfcError'), require('./model/InitializeNfcErrorCode'), require('./model/InputError'), require('./model/InputErrorCode'), require('./model/InternalNamedEntity'), require('./model/InternalTransactionPreview'), require('./model/LinkedEntityTypeEnum'), require('./model/MarketplacePermissions'), require('./model/MaturityPolicyEnum'), require('./model/MobileBaseData'), require('./model/MobileOperationEnum'), require('./model/MobilePage'), require('./model/MobileTranslations'), require('./model/NamedEntity'), require('./model/NfcAuthError'), require('./model/NfcAuthErrorCode'), require('./model/NfcDataForInitialize'), require('./model/NfcDataForPersonalize'), require('./model/NfcExternalAuthenticateParameter'), require('./model/NfcExternalAuthenticateResult'), require('./model/NfcInitializeParameter'), require('./model/NfcInitializeResult'), require('./model/NfcPersonalizeOtpParameter'), require('./model/NfcPersonalizeParameter'), require('./model/NfcTagKeyEnum'), require('./model/NfcTokenParameter'), require('./model/NotFoundError'), require('./model/NotificationLevelEnum'), require('./model/NumberFormatEnum'), require('./model/Operation'), require('./model/OperationDataForRun'), require('./model/OperationPageContextEnum'), require('./model/OperationResultTypeEnum'), require('./model/OperationRowActionEnum'), require('./model/OperationScopeEnum'), require('./model/OtpError'), require('./model/OtpErrorCode'), require('./model/OutboundSmsStatusEnum'), require('./model/OwnerRecordPermissions'), require('./model/PasswordInput'), require('./model/PasswordInputMethodEnum'), require('./model/PasswordModeEnum'), require('./model/PasswordPermissions'), require('./model/PasswordRegistration'), require('./model/PasswordStatusAndPermissions'), require('./model/PasswordStatusEnum'), require('./model/PasswordType'), require('./model/PasswordTypeRegistration'), require('./model/PaymentError'), require('./model/PaymentErrorCode'), require('./model/PaymentPreview'), require('./model/PaymentRequestStatusEnum'), require('./model/PaymentSchedulingEnum'), require('./model/PerformInternalTransaction'), require('./model/PerformPayment'), require('./model/PerformScheduledPaymentInstallment'), require('./model/PerformTransaction'), require('./model/Permissions'), require('./model/PersonalizeNfcError'), require('./model/PersonalizeNfcErrorCode'), require('./model/Phone'), require('./model/PhoneBasicData'), require('./model/PhoneConfiguration'), require('./model/PhoneConfigurationForUserRegistration'), require('./model/PhoneDataForEdit'), require('./model/PhoneDataForNew'), require('./model/PhoneEdit'), require('./model/PhoneKind'), require('./model/PhoneManage'), require('./model/PhoneNew'), require('./model/PhoneResult'), require('./model/PhoneView'), require('./model/PhysicalTokenTypeEnum'), require('./model/PosError'), require('./model/PosErrorCode'), require('./model/PreselectedPeriod'), require('./model/Principal'), require('./model/PrincipalType'), require('./model/PrincipalTypeInput'), require('./model/PrincipalTypeKind'), require('./model/ProfileFieldActions'), require('./model/Record'), require('./model/RecordBasePermissions'), require('./model/RecordBasicData'), require('./model/RecordDataForEdit'), require('./model/RecordDataForNew'), require('./model/RecordDataForSearch'), require('./model/RecordDataForSharedSearch'), require('./model/RecordEdit'), require('./model/RecordKind'), require('./model/RecordLayoutEnum'), require('./model/RecordManage'), require('./model/RecordNew'), require('./model/RecordResult'), require('./model/RecordType'), require('./model/RecordTypeWithMenu'), require('./model/RecordView'), require('./model/RecordWithOwnerResult'), require('./model/RecurringPaymentOccurrence'), require('./model/RecurringPaymentOccurrenceStatusEnum'), require('./model/RecurringPaymentStatusEnum'), require('./model/RedeemVoucher'), require('./model/RedeemVoucherError'), require('./model/RedeemVoucherErrorCode'), require('./model/RoleEnum'), require('./model/RunOperation'), require('./model/RunOperationResult'), require('./model/RunOperationResultColumn'), require('./model/RunOperationResultRow'), require('./model/ScheduledPaymentInstallment'), require('./model/ScheduledPaymentInstallmentPreview'), require('./model/ScheduledPaymentInstallmentStatusEnum'), require('./model/ScheduledPaymentStatusEnum'), require('./model/SearchByDistanceData'), require('./model/SendMediumEnum'), require('./model/TimeFieldEnum'), require('./model/TimeFormatEnum'), require('./model/TimeInterval'), require('./model/Token'), require('./model/TokenDetailed'), require('./model/TokenStatusEnum'), require('./model/TokenType'), require('./model/TokenTypeEnum'), require('./model/Transaction'), require('./model/TransactionDataForSearch'), require('./model/TransactionKind'), require('./model/TransactionPreview'), require('./model/TransactionResult'), require('./model/TransactionSubjectsEnum'), require('./model/TransactionTypeData'), require('./model/TransactionView'), require('./model/Transfer'), require('./model/TransferDataForSearch'), require('./model/TransferFeePreview'), require('./model/TransferFilter'), require('./model/TransferKind'), require('./model/TransferStatus'), require('./model/TransferStatusFlow'), require('./model/TransferStatusFlowForTransferView'), require('./model/TransferStatusLog'), require('./model/TransferType'), require('./model/TransferView'), require('./model/UIElementWithContent'), require('./model/UnauthorizedError'), require('./model/UnauthorizedErrorCode'), require('./model/User'), require('./model/UserAdDataForSearch'), require('./model/UserAddressesListData'), require('./model/UserBalancesOrderByEnum'), require('./model/UserBalancesSummary'), require('./model/UserBasicData'), require('./model/UserClientTypePermissions'), require('./model/UserContactPermissions'), require('./model/UserCustomFieldValue'), require('./model/UserDataForEdit'), require('./model/UserDataForMap'), require('./model/UserDataForNew'), require('./model/UserDataForSearch'), require('./model/UserEdit'), require('./model/UserImageKind'), require('./model/UserManage'), require('./model/UserMarketplacePermissions'), require('./model/UserNew'), require('./model/UserOperatorsDataForSearch'), require('./model/UserOrderByEnum'), require('./model/UserPaymentPermissions'), require('./model/UserPermissions'), require('./model/UserPhonesListData'), require('./model/UserProfilePermissions'), require('./model/UserRegistrationPrincipal'), require('./model/UserRegistrationResult'), require('./model/UserRegistrationStatusEnum'), require('./model/UserResult'), require('./model/UserStatusEnum'), require('./model/UserView'), require('./model/UserVouchersDataForSearch'), require('./model/UserWithBalanceResult'), require('./model/UsersPermissions'), require('./model/VersionedEntity'), require('./model/Voucher'), require('./model/VoucherBasicData'), require('./model/VoucherConfiguration'), require('./model/VoucherCreationTypeEnum'), require('./model/VoucherDataForBuy'), require('./model/VoucherDataForRedeem'), require('./model/VoucherInitialDataForRedeem'), require('./model/VoucherRedeemResult'), require('./model/VoucherRelationEnum'), require('./model/VoucherResult'), require('./model/VoucherStatusEnum'), require('./model/VoucherType'), require('./model/VoucherView'), require('./model/WeekDayEnum'), require('./api/AccountsApi'), require('./api/AddressesApi'), require('./api/AgreementsApi'), require('./api/AuthApi'), require('./api/CaptchaApi'), require('./api/ClientsApi'), require('./api/ContactsApi'), require('./api/ImagesApi'), require('./api/MarketplaceApi'), require('./api/MobileApi'), require('./api/NFCApi'), require('./api/OperationsApi'), require('./api/OperatorsApi'), require('./api/POSApi'), require('./api/PasswordsApi'), require('./api/PaymentsApi'), require('./api/PhonesApi'), require('./api/RecordsApi'), require('./api/TransactionsApi'), require('./api/TransfersApi'), require('./api/UsersApi'), require('./api/VouchersApi'));
  }
}(function(ApiClient, Account, AccountHistoryOrderByEnum, AccountHistoryResult, AccountHistoryStatus, AccountKind, AccountPermissions, AccountStatus, AccountWithCurrency, AccountWithHistoryStatus, AccountWithOwner, AccountWithStatus, ActivateClientResult, Ad, AdBasicData, AdCategoryWithChildren, AdCategoryWithParent, AdDataForEdit, AdDataForNew, AdDataForSearch, AdDetailed, AdEdit, AdKind, AdManage, AdNew, AdOrderByEnum, AdResult, AdStatusEnum, AdView, Address, AddressBasicData, AddressConfiguration, AddressConfigurationForUserRegistration, AddressDataForEdit, AddressDataForNew, AddressEdit, AddressFieldEnum, AddressInSearchResultEnum, AddressManage, AddressNew, AddressResult, AddressView, Agreement, AgreementContent, AmountSummary, Auth, Authorization, AuthorizationLevelData, AuthorizationPermissions, AuthorizationStatusEnum, AvailabilityEnum, BadRequestError, BadRequestErrorCode, BalanceLevelEnum, BaseNfcError, BaseTransferDataForSearch, BaseUserDataForSearch, BasicAdDataForSearch, BasicProfileFieldEnum, BasicProfileFieldInput, BuyVoucher, BuyVoucherError, BuyVoucherErrorCode, CaptchaProviderEnum, CaptchaResponse, ChangeForgottenPassword, ChangePassword, ClientStatusEnum, ClientView, CodeVerificationStatusEnum, ConflictError, ConflictErrorCode, Country, Currency, CustomField, CustomFieldControlEnum, CustomFieldDetailed, CustomFieldDynamicValue, CustomFieldPossibleValue, CustomFieldSizeEnum, CustomFieldTypeEnum, CustomFieldValue, DataForAccountHistory, DataForChangeForgottenPassword, DataForLogin, DataForMobileGuest, DataForMobileUser, DataForTransaction, DataForUserBalancesSearch, DataForUserPasswords, DateFormatEnum, DatePeriod, DistanceEnum, Entity, EntityReference, Error, ErrorKind, ExternalPaymentStatusEnum, ForbiddenError, ForbiddenErrorCode, ForgottenPasswordRequest, GeneralOperatorsDataForSearch, GeographicalCoordinate, Group, GroupForRegistration, GroupKind, IAddress, IPhone, IPhoneDetailed, IUser, IdentificationMethodEnum, Image, ImageKind, ImageSizeEnum, ImageView, ImagesListData, InitializeNfcError, InitializeNfcErrorCode, InputError, InputErrorCode, InternalNamedEntity, InternalTransactionPreview, LinkedEntityTypeEnum, MarketplacePermissions, MaturityPolicyEnum, MobileBaseData, MobileOperationEnum, MobilePage, MobileTranslations, NamedEntity, NfcAuthError, NfcAuthErrorCode, NfcDataForInitialize, NfcDataForPersonalize, NfcExternalAuthenticateParameter, NfcExternalAuthenticateResult, NfcInitializeParameter, NfcInitializeResult, NfcPersonalizeOtpParameter, NfcPersonalizeParameter, NfcTagKeyEnum, NfcTokenParameter, NotFoundError, NotificationLevelEnum, NumberFormatEnum, Operation, OperationDataForRun, OperationPageContextEnum, OperationResultTypeEnum, OperationRowActionEnum, OperationScopeEnum, OtpError, OtpErrorCode, OutboundSmsStatusEnum, OwnerRecordPermissions, PasswordInput, PasswordInputMethodEnum, PasswordModeEnum, PasswordPermissions, PasswordRegistration, PasswordStatusAndPermissions, PasswordStatusEnum, PasswordType, PasswordTypeRegistration, PaymentError, PaymentErrorCode, PaymentPreview, PaymentRequestStatusEnum, PaymentSchedulingEnum, PerformInternalTransaction, PerformPayment, PerformScheduledPaymentInstallment, PerformTransaction, Permissions, PersonalizeNfcError, PersonalizeNfcErrorCode, Phone, PhoneBasicData, PhoneConfiguration, PhoneConfigurationForUserRegistration, PhoneDataForEdit, PhoneDataForNew, PhoneEdit, PhoneKind, PhoneManage, PhoneNew, PhoneResult, PhoneView, PhysicalTokenTypeEnum, PosError, PosErrorCode, PreselectedPeriod, Principal, PrincipalType, PrincipalTypeInput, PrincipalTypeKind, ProfileFieldActions, Record, RecordBasePermissions, RecordBasicData, RecordDataForEdit, RecordDataForNew, RecordDataForSearch, RecordDataForSharedSearch, RecordEdit, RecordKind, RecordLayoutEnum, RecordManage, RecordNew, RecordResult, RecordType, RecordTypeWithMenu, RecordView, RecordWithOwnerResult, RecurringPaymentOccurrence, RecurringPaymentOccurrenceStatusEnum, RecurringPaymentStatusEnum, RedeemVoucher, RedeemVoucherError, RedeemVoucherErrorCode, RoleEnum, RunOperation, RunOperationResult, RunOperationResultColumn, RunOperationResultRow, ScheduledPaymentInstallment, ScheduledPaymentInstallmentPreview, ScheduledPaymentInstallmentStatusEnum, ScheduledPaymentStatusEnum, SearchByDistanceData, SendMediumEnum, TimeFieldEnum, TimeFormatEnum, TimeInterval, Token, TokenDetailed, TokenStatusEnum, TokenType, TokenTypeEnum, Transaction, TransactionDataForSearch, TransactionKind, TransactionPreview, TransactionResult, TransactionSubjectsEnum, TransactionTypeData, TransactionView, Transfer, TransferDataForSearch, TransferFeePreview, TransferFilter, TransferKind, TransferStatus, TransferStatusFlow, TransferStatusFlowForTransferView, TransferStatusLog, TransferType, TransferView, UIElementWithContent, UnauthorizedError, UnauthorizedErrorCode, User, UserAdDataForSearch, UserAddressesListData, UserBalancesOrderByEnum, UserBalancesSummary, UserBasicData, UserClientTypePermissions, UserContactPermissions, UserCustomFieldValue, UserDataForEdit, UserDataForMap, UserDataForNew, UserDataForSearch, UserEdit, UserImageKind, UserManage, UserMarketplacePermissions, UserNew, UserOperatorsDataForSearch, UserOrderByEnum, UserPaymentPermissions, UserPermissions, UserPhonesListData, UserProfilePermissions, UserRegistrationPrincipal, UserRegistrationResult, UserRegistrationStatusEnum, UserResult, UserStatusEnum, UserView, UserVouchersDataForSearch, UserWithBalanceResult, UsersPermissions, VersionedEntity, Voucher, VoucherBasicData, VoucherConfiguration, VoucherCreationTypeEnum, VoucherDataForBuy, VoucherDataForRedeem, VoucherInitialDataForRedeem, VoucherRedeemResult, VoucherRelationEnum, VoucherResult, VoucherStatusEnum, VoucherType, VoucherView, WeekDayEnum, AccountsApi, AddressesApi, AgreementsApi, AuthApi, CaptchaApi, ClientsApi, ContactsApi, ImagesApi, MarketplaceApi, MobileApi, NFCApi, OperationsApi, OperatorsApi, POSApi, PasswordsApi, PaymentsApi, PhonesApi, RecordsApi, TransactionsApi, TransfersApi, UsersApi, VouchersApi) {
  'use strict';

  /**
   * The_REST_API_for_Cyclos_4_7_1.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Cyclos471Api = require('index'); // See note below*.
   * var xxxSvc = new Cyclos471Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Cyclos471Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Cyclos471Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Cyclos471Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 4.7.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AccountHistoryOrderByEnum model constructor.
     * @property {module:model/AccountHistoryOrderByEnum}
     */
    AccountHistoryOrderByEnum: AccountHistoryOrderByEnum,
    /**
     * The AccountHistoryResult model constructor.
     * @property {module:model/AccountHistoryResult}
     */
    AccountHistoryResult: AccountHistoryResult,
    /**
     * The AccountHistoryStatus model constructor.
     * @property {module:model/AccountHistoryStatus}
     */
    AccountHistoryStatus: AccountHistoryStatus,
    /**
     * The AccountKind model constructor.
     * @property {module:model/AccountKind}
     */
    AccountKind: AccountKind,
    /**
     * The AccountPermissions model constructor.
     * @property {module:model/AccountPermissions}
     */
    AccountPermissions: AccountPermissions,
    /**
     * The AccountStatus model constructor.
     * @property {module:model/AccountStatus}
     */
    AccountStatus: AccountStatus,
    /**
     * The AccountWithCurrency model constructor.
     * @property {module:model/AccountWithCurrency}
     */
    AccountWithCurrency: AccountWithCurrency,
    /**
     * The AccountWithHistoryStatus model constructor.
     * @property {module:model/AccountWithHistoryStatus}
     */
    AccountWithHistoryStatus: AccountWithHistoryStatus,
    /**
     * The AccountWithOwner model constructor.
     * @property {module:model/AccountWithOwner}
     */
    AccountWithOwner: AccountWithOwner,
    /**
     * The AccountWithStatus model constructor.
     * @property {module:model/AccountWithStatus}
     */
    AccountWithStatus: AccountWithStatus,
    /**
     * The ActivateClientResult model constructor.
     * @property {module:model/ActivateClientResult}
     */
    ActivateClientResult: ActivateClientResult,
    /**
     * The Ad model constructor.
     * @property {module:model/Ad}
     */
    Ad: Ad,
    /**
     * The AdBasicData model constructor.
     * @property {module:model/AdBasicData}
     */
    AdBasicData: AdBasicData,
    /**
     * The AdCategoryWithChildren model constructor.
     * @property {module:model/AdCategoryWithChildren}
     */
    AdCategoryWithChildren: AdCategoryWithChildren,
    /**
     * The AdCategoryWithParent model constructor.
     * @property {module:model/AdCategoryWithParent}
     */
    AdCategoryWithParent: AdCategoryWithParent,
    /**
     * The AdDataForEdit model constructor.
     * @property {module:model/AdDataForEdit}
     */
    AdDataForEdit: AdDataForEdit,
    /**
     * The AdDataForNew model constructor.
     * @property {module:model/AdDataForNew}
     */
    AdDataForNew: AdDataForNew,
    /**
     * The AdDataForSearch model constructor.
     * @property {module:model/AdDataForSearch}
     */
    AdDataForSearch: AdDataForSearch,
    /**
     * The AdDetailed model constructor.
     * @property {module:model/AdDetailed}
     */
    AdDetailed: AdDetailed,
    /**
     * The AdEdit model constructor.
     * @property {module:model/AdEdit}
     */
    AdEdit: AdEdit,
    /**
     * The AdKind model constructor.
     * @property {module:model/AdKind}
     */
    AdKind: AdKind,
    /**
     * The AdManage model constructor.
     * @property {module:model/AdManage}
     */
    AdManage: AdManage,
    /**
     * The AdNew model constructor.
     * @property {module:model/AdNew}
     */
    AdNew: AdNew,
    /**
     * The AdOrderByEnum model constructor.
     * @property {module:model/AdOrderByEnum}
     */
    AdOrderByEnum: AdOrderByEnum,
    /**
     * The AdResult model constructor.
     * @property {module:model/AdResult}
     */
    AdResult: AdResult,
    /**
     * The AdStatusEnum model constructor.
     * @property {module:model/AdStatusEnum}
     */
    AdStatusEnum: AdStatusEnum,
    /**
     * The AdView model constructor.
     * @property {module:model/AdView}
     */
    AdView: AdView,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The AddressBasicData model constructor.
     * @property {module:model/AddressBasicData}
     */
    AddressBasicData: AddressBasicData,
    /**
     * The AddressConfiguration model constructor.
     * @property {module:model/AddressConfiguration}
     */
    AddressConfiguration: AddressConfiguration,
    /**
     * The AddressConfigurationForUserRegistration model constructor.
     * @property {module:model/AddressConfigurationForUserRegistration}
     */
    AddressConfigurationForUserRegistration: AddressConfigurationForUserRegistration,
    /**
     * The AddressDataForEdit model constructor.
     * @property {module:model/AddressDataForEdit}
     */
    AddressDataForEdit: AddressDataForEdit,
    /**
     * The AddressDataForNew model constructor.
     * @property {module:model/AddressDataForNew}
     */
    AddressDataForNew: AddressDataForNew,
    /**
     * The AddressEdit model constructor.
     * @property {module:model/AddressEdit}
     */
    AddressEdit: AddressEdit,
    /**
     * The AddressFieldEnum model constructor.
     * @property {module:model/AddressFieldEnum}
     */
    AddressFieldEnum: AddressFieldEnum,
    /**
     * The AddressInSearchResultEnum model constructor.
     * @property {module:model/AddressInSearchResultEnum}
     */
    AddressInSearchResultEnum: AddressInSearchResultEnum,
    /**
     * The AddressManage model constructor.
     * @property {module:model/AddressManage}
     */
    AddressManage: AddressManage,
    /**
     * The AddressNew model constructor.
     * @property {module:model/AddressNew}
     */
    AddressNew: AddressNew,
    /**
     * The AddressResult model constructor.
     * @property {module:model/AddressResult}
     */
    AddressResult: AddressResult,
    /**
     * The AddressView model constructor.
     * @property {module:model/AddressView}
     */
    AddressView: AddressView,
    /**
     * The Agreement model constructor.
     * @property {module:model/Agreement}
     */
    Agreement: Agreement,
    /**
     * The AgreementContent model constructor.
     * @property {module:model/AgreementContent}
     */
    AgreementContent: AgreementContent,
    /**
     * The AmountSummary model constructor.
     * @property {module:model/AmountSummary}
     */
    AmountSummary: AmountSummary,
    /**
     * The Auth model constructor.
     * @property {module:model/Auth}
     */
    Auth: Auth,
    /**
     * The Authorization model constructor.
     * @property {module:model/Authorization}
     */
    Authorization: Authorization,
    /**
     * The AuthorizationLevelData model constructor.
     * @property {module:model/AuthorizationLevelData}
     */
    AuthorizationLevelData: AuthorizationLevelData,
    /**
     * The AuthorizationPermissions model constructor.
     * @property {module:model/AuthorizationPermissions}
     */
    AuthorizationPermissions: AuthorizationPermissions,
    /**
     * The AuthorizationStatusEnum model constructor.
     * @property {module:model/AuthorizationStatusEnum}
     */
    AuthorizationStatusEnum: AuthorizationStatusEnum,
    /**
     * The AvailabilityEnum model constructor.
     * @property {module:model/AvailabilityEnum}
     */
    AvailabilityEnum: AvailabilityEnum,
    /**
     * The BadRequestError model constructor.
     * @property {module:model/BadRequestError}
     */
    BadRequestError: BadRequestError,
    /**
     * The BadRequestErrorCode model constructor.
     * @property {module:model/BadRequestErrorCode}
     */
    BadRequestErrorCode: BadRequestErrorCode,
    /**
     * The BalanceLevelEnum model constructor.
     * @property {module:model/BalanceLevelEnum}
     */
    BalanceLevelEnum: BalanceLevelEnum,
    /**
     * The BaseNfcError model constructor.
     * @property {module:model/BaseNfcError}
     */
    BaseNfcError: BaseNfcError,
    /**
     * The BaseTransferDataForSearch model constructor.
     * @property {module:model/BaseTransferDataForSearch}
     */
    BaseTransferDataForSearch: BaseTransferDataForSearch,
    /**
     * The BaseUserDataForSearch model constructor.
     * @property {module:model/BaseUserDataForSearch}
     */
    BaseUserDataForSearch: BaseUserDataForSearch,
    /**
     * The BasicAdDataForSearch model constructor.
     * @property {module:model/BasicAdDataForSearch}
     */
    BasicAdDataForSearch: BasicAdDataForSearch,
    /**
     * The BasicProfileFieldEnum model constructor.
     * @property {module:model/BasicProfileFieldEnum}
     */
    BasicProfileFieldEnum: BasicProfileFieldEnum,
    /**
     * The BasicProfileFieldInput model constructor.
     * @property {module:model/BasicProfileFieldInput}
     */
    BasicProfileFieldInput: BasicProfileFieldInput,
    /**
     * The BuyVoucher model constructor.
     * @property {module:model/BuyVoucher}
     */
    BuyVoucher: BuyVoucher,
    /**
     * The BuyVoucherError model constructor.
     * @property {module:model/BuyVoucherError}
     */
    BuyVoucherError: BuyVoucherError,
    /**
     * The BuyVoucherErrorCode model constructor.
     * @property {module:model/BuyVoucherErrorCode}
     */
    BuyVoucherErrorCode: BuyVoucherErrorCode,
    /**
     * The CaptchaProviderEnum model constructor.
     * @property {module:model/CaptchaProviderEnum}
     */
    CaptchaProviderEnum: CaptchaProviderEnum,
    /**
     * The CaptchaResponse model constructor.
     * @property {module:model/CaptchaResponse}
     */
    CaptchaResponse: CaptchaResponse,
    /**
     * The ChangeForgottenPassword model constructor.
     * @property {module:model/ChangeForgottenPassword}
     */
    ChangeForgottenPassword: ChangeForgottenPassword,
    /**
     * The ChangePassword model constructor.
     * @property {module:model/ChangePassword}
     */
    ChangePassword: ChangePassword,
    /**
     * The ClientStatusEnum model constructor.
     * @property {module:model/ClientStatusEnum}
     */
    ClientStatusEnum: ClientStatusEnum,
    /**
     * The ClientView model constructor.
     * @property {module:model/ClientView}
     */
    ClientView: ClientView,
    /**
     * The CodeVerificationStatusEnum model constructor.
     * @property {module:model/CodeVerificationStatusEnum}
     */
    CodeVerificationStatusEnum: CodeVerificationStatusEnum,
    /**
     * The ConflictError model constructor.
     * @property {module:model/ConflictError}
     */
    ConflictError: ConflictError,
    /**
     * The ConflictErrorCode model constructor.
     * @property {module:model/ConflictErrorCode}
     */
    ConflictErrorCode: ConflictErrorCode,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The CustomField model constructor.
     * @property {module:model/CustomField}
     */
    CustomField: CustomField,
    /**
     * The CustomFieldControlEnum model constructor.
     * @property {module:model/CustomFieldControlEnum}
     */
    CustomFieldControlEnum: CustomFieldControlEnum,
    /**
     * The CustomFieldDetailed model constructor.
     * @property {module:model/CustomFieldDetailed}
     */
    CustomFieldDetailed: CustomFieldDetailed,
    /**
     * The CustomFieldDynamicValue model constructor.
     * @property {module:model/CustomFieldDynamicValue}
     */
    CustomFieldDynamicValue: CustomFieldDynamicValue,
    /**
     * The CustomFieldPossibleValue model constructor.
     * @property {module:model/CustomFieldPossibleValue}
     */
    CustomFieldPossibleValue: CustomFieldPossibleValue,
    /**
     * The CustomFieldSizeEnum model constructor.
     * @property {module:model/CustomFieldSizeEnum}
     */
    CustomFieldSizeEnum: CustomFieldSizeEnum,
    /**
     * The CustomFieldTypeEnum model constructor.
     * @property {module:model/CustomFieldTypeEnum}
     */
    CustomFieldTypeEnum: CustomFieldTypeEnum,
    /**
     * The CustomFieldValue model constructor.
     * @property {module:model/CustomFieldValue}
     */
    CustomFieldValue: CustomFieldValue,
    /**
     * The DataForAccountHistory model constructor.
     * @property {module:model/DataForAccountHistory}
     */
    DataForAccountHistory: DataForAccountHistory,
    /**
     * The DataForChangeForgottenPassword model constructor.
     * @property {module:model/DataForChangeForgottenPassword}
     */
    DataForChangeForgottenPassword: DataForChangeForgottenPassword,
    /**
     * The DataForLogin model constructor.
     * @property {module:model/DataForLogin}
     */
    DataForLogin: DataForLogin,
    /**
     * The DataForMobileGuest model constructor.
     * @property {module:model/DataForMobileGuest}
     */
    DataForMobileGuest: DataForMobileGuest,
    /**
     * The DataForMobileUser model constructor.
     * @property {module:model/DataForMobileUser}
     */
    DataForMobileUser: DataForMobileUser,
    /**
     * The DataForTransaction model constructor.
     * @property {module:model/DataForTransaction}
     */
    DataForTransaction: DataForTransaction,
    /**
     * The DataForUserBalancesSearch model constructor.
     * @property {module:model/DataForUserBalancesSearch}
     */
    DataForUserBalancesSearch: DataForUserBalancesSearch,
    /**
     * The DataForUserPasswords model constructor.
     * @property {module:model/DataForUserPasswords}
     */
    DataForUserPasswords: DataForUserPasswords,
    /**
     * The DateFormatEnum model constructor.
     * @property {module:model/DateFormatEnum}
     */
    DateFormatEnum: DateFormatEnum,
    /**
     * The DatePeriod model constructor.
     * @property {module:model/DatePeriod}
     */
    DatePeriod: DatePeriod,
    /**
     * The DistanceEnum model constructor.
     * @property {module:model/DistanceEnum}
     */
    DistanceEnum: DistanceEnum,
    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity: Entity,
    /**
     * The EntityReference model constructor.
     * @property {module:model/EntityReference}
     */
    EntityReference: EntityReference,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorKind model constructor.
     * @property {module:model/ErrorKind}
     */
    ErrorKind: ErrorKind,
    /**
     * The ExternalPaymentStatusEnum model constructor.
     * @property {module:model/ExternalPaymentStatusEnum}
     */
    ExternalPaymentStatusEnum: ExternalPaymentStatusEnum,
    /**
     * The ForbiddenError model constructor.
     * @property {module:model/ForbiddenError}
     */
    ForbiddenError: ForbiddenError,
    /**
     * The ForbiddenErrorCode model constructor.
     * @property {module:model/ForbiddenErrorCode}
     */
    ForbiddenErrorCode: ForbiddenErrorCode,
    /**
     * The ForgottenPasswordRequest model constructor.
     * @property {module:model/ForgottenPasswordRequest}
     */
    ForgottenPasswordRequest: ForgottenPasswordRequest,
    /**
     * The GeneralOperatorsDataForSearch model constructor.
     * @property {module:model/GeneralOperatorsDataForSearch}
     */
    GeneralOperatorsDataForSearch: GeneralOperatorsDataForSearch,
    /**
     * The GeographicalCoordinate model constructor.
     * @property {module:model/GeographicalCoordinate}
     */
    GeographicalCoordinate: GeographicalCoordinate,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupForRegistration model constructor.
     * @property {module:model/GroupForRegistration}
     */
    GroupForRegistration: GroupForRegistration,
    /**
     * The GroupKind model constructor.
     * @property {module:model/GroupKind}
     */
    GroupKind: GroupKind,
    /**
     * The IAddress model constructor.
     * @property {module:model/IAddress}
     */
    IAddress: IAddress,
    /**
     * The IPhone model constructor.
     * @property {module:model/IPhone}
     */
    IPhone: IPhone,
    /**
     * The IPhoneDetailed model constructor.
     * @property {module:model/IPhoneDetailed}
     */
    IPhoneDetailed: IPhoneDetailed,
    /**
     * The IUser model constructor.
     * @property {module:model/IUser}
     */
    IUser: IUser,
    /**
     * The IdentificationMethodEnum model constructor.
     * @property {module:model/IdentificationMethodEnum}
     */
    IdentificationMethodEnum: IdentificationMethodEnum,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The ImageKind model constructor.
     * @property {module:model/ImageKind}
     */
    ImageKind: ImageKind,
    /**
     * The ImageSizeEnum model constructor.
     * @property {module:model/ImageSizeEnum}
     */
    ImageSizeEnum: ImageSizeEnum,
    /**
     * The ImageView model constructor.
     * @property {module:model/ImageView}
     */
    ImageView: ImageView,
    /**
     * The ImagesListData model constructor.
     * @property {module:model/ImagesListData}
     */
    ImagesListData: ImagesListData,
    /**
     * The InitializeNfcError model constructor.
     * @property {module:model/InitializeNfcError}
     */
    InitializeNfcError: InitializeNfcError,
    /**
     * The InitializeNfcErrorCode model constructor.
     * @property {module:model/InitializeNfcErrorCode}
     */
    InitializeNfcErrorCode: InitializeNfcErrorCode,
    /**
     * The InputError model constructor.
     * @property {module:model/InputError}
     */
    InputError: InputError,
    /**
     * The InputErrorCode model constructor.
     * @property {module:model/InputErrorCode}
     */
    InputErrorCode: InputErrorCode,
    /**
     * The InternalNamedEntity model constructor.
     * @property {module:model/InternalNamedEntity}
     */
    InternalNamedEntity: InternalNamedEntity,
    /**
     * The InternalTransactionPreview model constructor.
     * @property {module:model/InternalTransactionPreview}
     */
    InternalTransactionPreview: InternalTransactionPreview,
    /**
     * The LinkedEntityTypeEnum model constructor.
     * @property {module:model/LinkedEntityTypeEnum}
     */
    LinkedEntityTypeEnum: LinkedEntityTypeEnum,
    /**
     * The MarketplacePermissions model constructor.
     * @property {module:model/MarketplacePermissions}
     */
    MarketplacePermissions: MarketplacePermissions,
    /**
     * The MaturityPolicyEnum model constructor.
     * @property {module:model/MaturityPolicyEnum}
     */
    MaturityPolicyEnum: MaturityPolicyEnum,
    /**
     * The MobileBaseData model constructor.
     * @property {module:model/MobileBaseData}
     */
    MobileBaseData: MobileBaseData,
    /**
     * The MobileOperationEnum model constructor.
     * @property {module:model/MobileOperationEnum}
     */
    MobileOperationEnum: MobileOperationEnum,
    /**
     * The MobilePage model constructor.
     * @property {module:model/MobilePage}
     */
    MobilePage: MobilePage,
    /**
     * The MobileTranslations model constructor.
     * @property {module:model/MobileTranslations}
     */
    MobileTranslations: MobileTranslations,
    /**
     * The NamedEntity model constructor.
     * @property {module:model/NamedEntity}
     */
    NamedEntity: NamedEntity,
    /**
     * The NfcAuthError model constructor.
     * @property {module:model/NfcAuthError}
     */
    NfcAuthError: NfcAuthError,
    /**
     * The NfcAuthErrorCode model constructor.
     * @property {module:model/NfcAuthErrorCode}
     */
    NfcAuthErrorCode: NfcAuthErrorCode,
    /**
     * The NfcDataForInitialize model constructor.
     * @property {module:model/NfcDataForInitialize}
     */
    NfcDataForInitialize: NfcDataForInitialize,
    /**
     * The NfcDataForPersonalize model constructor.
     * @property {module:model/NfcDataForPersonalize}
     */
    NfcDataForPersonalize: NfcDataForPersonalize,
    /**
     * The NfcExternalAuthenticateParameter model constructor.
     * @property {module:model/NfcExternalAuthenticateParameter}
     */
    NfcExternalAuthenticateParameter: NfcExternalAuthenticateParameter,
    /**
     * The NfcExternalAuthenticateResult model constructor.
     * @property {module:model/NfcExternalAuthenticateResult}
     */
    NfcExternalAuthenticateResult: NfcExternalAuthenticateResult,
    /**
     * The NfcInitializeParameter model constructor.
     * @property {module:model/NfcInitializeParameter}
     */
    NfcInitializeParameter: NfcInitializeParameter,
    /**
     * The NfcInitializeResult model constructor.
     * @property {module:model/NfcInitializeResult}
     */
    NfcInitializeResult: NfcInitializeResult,
    /**
     * The NfcPersonalizeOtpParameter model constructor.
     * @property {module:model/NfcPersonalizeOtpParameter}
     */
    NfcPersonalizeOtpParameter: NfcPersonalizeOtpParameter,
    /**
     * The NfcPersonalizeParameter model constructor.
     * @property {module:model/NfcPersonalizeParameter}
     */
    NfcPersonalizeParameter: NfcPersonalizeParameter,
    /**
     * The NfcTagKeyEnum model constructor.
     * @property {module:model/NfcTagKeyEnum}
     */
    NfcTagKeyEnum: NfcTagKeyEnum,
    /**
     * The NfcTokenParameter model constructor.
     * @property {module:model/NfcTokenParameter}
     */
    NfcTokenParameter: NfcTokenParameter,
    /**
     * The NotFoundError model constructor.
     * @property {module:model/NotFoundError}
     */
    NotFoundError: NotFoundError,
    /**
     * The NotificationLevelEnum model constructor.
     * @property {module:model/NotificationLevelEnum}
     */
    NotificationLevelEnum: NotificationLevelEnum,
    /**
     * The NumberFormatEnum model constructor.
     * @property {module:model/NumberFormatEnum}
     */
    NumberFormatEnum: NumberFormatEnum,
    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation: Operation,
    /**
     * The OperationDataForRun model constructor.
     * @property {module:model/OperationDataForRun}
     */
    OperationDataForRun: OperationDataForRun,
    /**
     * The OperationPageContextEnum model constructor.
     * @property {module:model/OperationPageContextEnum}
     */
    OperationPageContextEnum: OperationPageContextEnum,
    /**
     * The OperationResultTypeEnum model constructor.
     * @property {module:model/OperationResultTypeEnum}
     */
    OperationResultTypeEnum: OperationResultTypeEnum,
    /**
     * The OperationRowActionEnum model constructor.
     * @property {module:model/OperationRowActionEnum}
     */
    OperationRowActionEnum: OperationRowActionEnum,
    /**
     * The OperationScopeEnum model constructor.
     * @property {module:model/OperationScopeEnum}
     */
    OperationScopeEnum: OperationScopeEnum,
    /**
     * The OtpError model constructor.
     * @property {module:model/OtpError}
     */
    OtpError: OtpError,
    /**
     * The OtpErrorCode model constructor.
     * @property {module:model/OtpErrorCode}
     */
    OtpErrorCode: OtpErrorCode,
    /**
     * The OutboundSmsStatusEnum model constructor.
     * @property {module:model/OutboundSmsStatusEnum}
     */
    OutboundSmsStatusEnum: OutboundSmsStatusEnum,
    /**
     * The OwnerRecordPermissions model constructor.
     * @property {module:model/OwnerRecordPermissions}
     */
    OwnerRecordPermissions: OwnerRecordPermissions,
    /**
     * The PasswordInput model constructor.
     * @property {module:model/PasswordInput}
     */
    PasswordInput: PasswordInput,
    /**
     * The PasswordInputMethodEnum model constructor.
     * @property {module:model/PasswordInputMethodEnum}
     */
    PasswordInputMethodEnum: PasswordInputMethodEnum,
    /**
     * The PasswordModeEnum model constructor.
     * @property {module:model/PasswordModeEnum}
     */
    PasswordModeEnum: PasswordModeEnum,
    /**
     * The PasswordPermissions model constructor.
     * @property {module:model/PasswordPermissions}
     */
    PasswordPermissions: PasswordPermissions,
    /**
     * The PasswordRegistration model constructor.
     * @property {module:model/PasswordRegistration}
     */
    PasswordRegistration: PasswordRegistration,
    /**
     * The PasswordStatusAndPermissions model constructor.
     * @property {module:model/PasswordStatusAndPermissions}
     */
    PasswordStatusAndPermissions: PasswordStatusAndPermissions,
    /**
     * The PasswordStatusEnum model constructor.
     * @property {module:model/PasswordStatusEnum}
     */
    PasswordStatusEnum: PasswordStatusEnum,
    /**
     * The PasswordType model constructor.
     * @property {module:model/PasswordType}
     */
    PasswordType: PasswordType,
    /**
     * The PasswordTypeRegistration model constructor.
     * @property {module:model/PasswordTypeRegistration}
     */
    PasswordTypeRegistration: PasswordTypeRegistration,
    /**
     * The PaymentError model constructor.
     * @property {module:model/PaymentError}
     */
    PaymentError: PaymentError,
    /**
     * The PaymentErrorCode model constructor.
     * @property {module:model/PaymentErrorCode}
     */
    PaymentErrorCode: PaymentErrorCode,
    /**
     * The PaymentPreview model constructor.
     * @property {module:model/PaymentPreview}
     */
    PaymentPreview: PaymentPreview,
    /**
     * The PaymentRequestStatusEnum model constructor.
     * @property {module:model/PaymentRequestStatusEnum}
     */
    PaymentRequestStatusEnum: PaymentRequestStatusEnum,
    /**
     * The PaymentSchedulingEnum model constructor.
     * @property {module:model/PaymentSchedulingEnum}
     */
    PaymentSchedulingEnum: PaymentSchedulingEnum,
    /**
     * The PerformInternalTransaction model constructor.
     * @property {module:model/PerformInternalTransaction}
     */
    PerformInternalTransaction: PerformInternalTransaction,
    /**
     * The PerformPayment model constructor.
     * @property {module:model/PerformPayment}
     */
    PerformPayment: PerformPayment,
    /**
     * The PerformScheduledPaymentInstallment model constructor.
     * @property {module:model/PerformScheduledPaymentInstallment}
     */
    PerformScheduledPaymentInstallment: PerformScheduledPaymentInstallment,
    /**
     * The PerformTransaction model constructor.
     * @property {module:model/PerformTransaction}
     */
    PerformTransaction: PerformTransaction,
    /**
     * The Permissions model constructor.
     * @property {module:model/Permissions}
     */
    Permissions: Permissions,
    /**
     * The PersonalizeNfcError model constructor.
     * @property {module:model/PersonalizeNfcError}
     */
    PersonalizeNfcError: PersonalizeNfcError,
    /**
     * The PersonalizeNfcErrorCode model constructor.
     * @property {module:model/PersonalizeNfcErrorCode}
     */
    PersonalizeNfcErrorCode: PersonalizeNfcErrorCode,
    /**
     * The Phone model constructor.
     * @property {module:model/Phone}
     */
    Phone: Phone,
    /**
     * The PhoneBasicData model constructor.
     * @property {module:model/PhoneBasicData}
     */
    PhoneBasicData: PhoneBasicData,
    /**
     * The PhoneConfiguration model constructor.
     * @property {module:model/PhoneConfiguration}
     */
    PhoneConfiguration: PhoneConfiguration,
    /**
     * The PhoneConfigurationForUserRegistration model constructor.
     * @property {module:model/PhoneConfigurationForUserRegistration}
     */
    PhoneConfigurationForUserRegistration: PhoneConfigurationForUserRegistration,
    /**
     * The PhoneDataForEdit model constructor.
     * @property {module:model/PhoneDataForEdit}
     */
    PhoneDataForEdit: PhoneDataForEdit,
    /**
     * The PhoneDataForNew model constructor.
     * @property {module:model/PhoneDataForNew}
     */
    PhoneDataForNew: PhoneDataForNew,
    /**
     * The PhoneEdit model constructor.
     * @property {module:model/PhoneEdit}
     */
    PhoneEdit: PhoneEdit,
    /**
     * The PhoneKind model constructor.
     * @property {module:model/PhoneKind}
     */
    PhoneKind: PhoneKind,
    /**
     * The PhoneManage model constructor.
     * @property {module:model/PhoneManage}
     */
    PhoneManage: PhoneManage,
    /**
     * The PhoneNew model constructor.
     * @property {module:model/PhoneNew}
     */
    PhoneNew: PhoneNew,
    /**
     * The PhoneResult model constructor.
     * @property {module:model/PhoneResult}
     */
    PhoneResult: PhoneResult,
    /**
     * The PhoneView model constructor.
     * @property {module:model/PhoneView}
     */
    PhoneView: PhoneView,
    /**
     * The PhysicalTokenTypeEnum model constructor.
     * @property {module:model/PhysicalTokenTypeEnum}
     */
    PhysicalTokenTypeEnum: PhysicalTokenTypeEnum,
    /**
     * The PosError model constructor.
     * @property {module:model/PosError}
     */
    PosError: PosError,
    /**
     * The PosErrorCode model constructor.
     * @property {module:model/PosErrorCode}
     */
    PosErrorCode: PosErrorCode,
    /**
     * The PreselectedPeriod model constructor.
     * @property {module:model/PreselectedPeriod}
     */
    PreselectedPeriod: PreselectedPeriod,
    /**
     * The Principal model constructor.
     * @property {module:model/Principal}
     */
    Principal: Principal,
    /**
     * The PrincipalType model constructor.
     * @property {module:model/PrincipalType}
     */
    PrincipalType: PrincipalType,
    /**
     * The PrincipalTypeInput model constructor.
     * @property {module:model/PrincipalTypeInput}
     */
    PrincipalTypeInput: PrincipalTypeInput,
    /**
     * The PrincipalTypeKind model constructor.
     * @property {module:model/PrincipalTypeKind}
     */
    PrincipalTypeKind: PrincipalTypeKind,
    /**
     * The ProfileFieldActions model constructor.
     * @property {module:model/ProfileFieldActions}
     */
    ProfileFieldActions: ProfileFieldActions,
    /**
     * The Record model constructor.
     * @property {module:model/Record}
     */
    Record: Record,
    /**
     * The RecordBasePermissions model constructor.
     * @property {module:model/RecordBasePermissions}
     */
    RecordBasePermissions: RecordBasePermissions,
    /**
     * The RecordBasicData model constructor.
     * @property {module:model/RecordBasicData}
     */
    RecordBasicData: RecordBasicData,
    /**
     * The RecordDataForEdit model constructor.
     * @property {module:model/RecordDataForEdit}
     */
    RecordDataForEdit: RecordDataForEdit,
    /**
     * The RecordDataForNew model constructor.
     * @property {module:model/RecordDataForNew}
     */
    RecordDataForNew: RecordDataForNew,
    /**
     * The RecordDataForSearch model constructor.
     * @property {module:model/RecordDataForSearch}
     */
    RecordDataForSearch: RecordDataForSearch,
    /**
     * The RecordDataForSharedSearch model constructor.
     * @property {module:model/RecordDataForSharedSearch}
     */
    RecordDataForSharedSearch: RecordDataForSharedSearch,
    /**
     * The RecordEdit model constructor.
     * @property {module:model/RecordEdit}
     */
    RecordEdit: RecordEdit,
    /**
     * The RecordKind model constructor.
     * @property {module:model/RecordKind}
     */
    RecordKind: RecordKind,
    /**
     * The RecordLayoutEnum model constructor.
     * @property {module:model/RecordLayoutEnum}
     */
    RecordLayoutEnum: RecordLayoutEnum,
    /**
     * The RecordManage model constructor.
     * @property {module:model/RecordManage}
     */
    RecordManage: RecordManage,
    /**
     * The RecordNew model constructor.
     * @property {module:model/RecordNew}
     */
    RecordNew: RecordNew,
    /**
     * The RecordResult model constructor.
     * @property {module:model/RecordResult}
     */
    RecordResult: RecordResult,
    /**
     * The RecordType model constructor.
     * @property {module:model/RecordType}
     */
    RecordType: RecordType,
    /**
     * The RecordTypeWithMenu model constructor.
     * @property {module:model/RecordTypeWithMenu}
     */
    RecordTypeWithMenu: RecordTypeWithMenu,
    /**
     * The RecordView model constructor.
     * @property {module:model/RecordView}
     */
    RecordView: RecordView,
    /**
     * The RecordWithOwnerResult model constructor.
     * @property {module:model/RecordWithOwnerResult}
     */
    RecordWithOwnerResult: RecordWithOwnerResult,
    /**
     * The RecurringPaymentOccurrence model constructor.
     * @property {module:model/RecurringPaymentOccurrence}
     */
    RecurringPaymentOccurrence: RecurringPaymentOccurrence,
    /**
     * The RecurringPaymentOccurrenceStatusEnum model constructor.
     * @property {module:model/RecurringPaymentOccurrenceStatusEnum}
     */
    RecurringPaymentOccurrenceStatusEnum: RecurringPaymentOccurrenceStatusEnum,
    /**
     * The RecurringPaymentStatusEnum model constructor.
     * @property {module:model/RecurringPaymentStatusEnum}
     */
    RecurringPaymentStatusEnum: RecurringPaymentStatusEnum,
    /**
     * The RedeemVoucher model constructor.
     * @property {module:model/RedeemVoucher}
     */
    RedeemVoucher: RedeemVoucher,
    /**
     * The RedeemVoucherError model constructor.
     * @property {module:model/RedeemVoucherError}
     */
    RedeemVoucherError: RedeemVoucherError,
    /**
     * The RedeemVoucherErrorCode model constructor.
     * @property {module:model/RedeemVoucherErrorCode}
     */
    RedeemVoucherErrorCode: RedeemVoucherErrorCode,
    /**
     * The RoleEnum model constructor.
     * @property {module:model/RoleEnum}
     */
    RoleEnum: RoleEnum,
    /**
     * The RunOperation model constructor.
     * @property {module:model/RunOperation}
     */
    RunOperation: RunOperation,
    /**
     * The RunOperationResult model constructor.
     * @property {module:model/RunOperationResult}
     */
    RunOperationResult: RunOperationResult,
    /**
     * The RunOperationResultColumn model constructor.
     * @property {module:model/RunOperationResultColumn}
     */
    RunOperationResultColumn: RunOperationResultColumn,
    /**
     * The RunOperationResultRow model constructor.
     * @property {module:model/RunOperationResultRow}
     */
    RunOperationResultRow: RunOperationResultRow,
    /**
     * The ScheduledPaymentInstallment model constructor.
     * @property {module:model/ScheduledPaymentInstallment}
     */
    ScheduledPaymentInstallment: ScheduledPaymentInstallment,
    /**
     * The ScheduledPaymentInstallmentPreview model constructor.
     * @property {module:model/ScheduledPaymentInstallmentPreview}
     */
    ScheduledPaymentInstallmentPreview: ScheduledPaymentInstallmentPreview,
    /**
     * The ScheduledPaymentInstallmentStatusEnum model constructor.
     * @property {module:model/ScheduledPaymentInstallmentStatusEnum}
     */
    ScheduledPaymentInstallmentStatusEnum: ScheduledPaymentInstallmentStatusEnum,
    /**
     * The ScheduledPaymentStatusEnum model constructor.
     * @property {module:model/ScheduledPaymentStatusEnum}
     */
    ScheduledPaymentStatusEnum: ScheduledPaymentStatusEnum,
    /**
     * The SearchByDistanceData model constructor.
     * @property {module:model/SearchByDistanceData}
     */
    SearchByDistanceData: SearchByDistanceData,
    /**
     * The SendMediumEnum model constructor.
     * @property {module:model/SendMediumEnum}
     */
    SendMediumEnum: SendMediumEnum,
    /**
     * The TimeFieldEnum model constructor.
     * @property {module:model/TimeFieldEnum}
     */
    TimeFieldEnum: TimeFieldEnum,
    /**
     * The TimeFormatEnum model constructor.
     * @property {module:model/TimeFormatEnum}
     */
    TimeFormatEnum: TimeFormatEnum,
    /**
     * The TimeInterval model constructor.
     * @property {module:model/TimeInterval}
     */
    TimeInterval: TimeInterval,
    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token: Token,
    /**
     * The TokenDetailed model constructor.
     * @property {module:model/TokenDetailed}
     */
    TokenDetailed: TokenDetailed,
    /**
     * The TokenStatusEnum model constructor.
     * @property {module:model/TokenStatusEnum}
     */
    TokenStatusEnum: TokenStatusEnum,
    /**
     * The TokenType model constructor.
     * @property {module:model/TokenType}
     */
    TokenType: TokenType,
    /**
     * The TokenTypeEnum model constructor.
     * @property {module:model/TokenTypeEnum}
     */
    TokenTypeEnum: TokenTypeEnum,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The TransactionDataForSearch model constructor.
     * @property {module:model/TransactionDataForSearch}
     */
    TransactionDataForSearch: TransactionDataForSearch,
    /**
     * The TransactionKind model constructor.
     * @property {module:model/TransactionKind}
     */
    TransactionKind: TransactionKind,
    /**
     * The TransactionPreview model constructor.
     * @property {module:model/TransactionPreview}
     */
    TransactionPreview: TransactionPreview,
    /**
     * The TransactionResult model constructor.
     * @property {module:model/TransactionResult}
     */
    TransactionResult: TransactionResult,
    /**
     * The TransactionSubjectsEnum model constructor.
     * @property {module:model/TransactionSubjectsEnum}
     */
    TransactionSubjectsEnum: TransactionSubjectsEnum,
    /**
     * The TransactionTypeData model constructor.
     * @property {module:model/TransactionTypeData}
     */
    TransactionTypeData: TransactionTypeData,
    /**
     * The TransactionView model constructor.
     * @property {module:model/TransactionView}
     */
    TransactionView: TransactionView,
    /**
     * The Transfer model constructor.
     * @property {module:model/Transfer}
     */
    Transfer: Transfer,
    /**
     * The TransferDataForSearch model constructor.
     * @property {module:model/TransferDataForSearch}
     */
    TransferDataForSearch: TransferDataForSearch,
    /**
     * The TransferFeePreview model constructor.
     * @property {module:model/TransferFeePreview}
     */
    TransferFeePreview: TransferFeePreview,
    /**
     * The TransferFilter model constructor.
     * @property {module:model/TransferFilter}
     */
    TransferFilter: TransferFilter,
    /**
     * The TransferKind model constructor.
     * @property {module:model/TransferKind}
     */
    TransferKind: TransferKind,
    /**
     * The TransferStatus model constructor.
     * @property {module:model/TransferStatus}
     */
    TransferStatus: TransferStatus,
    /**
     * The TransferStatusFlow model constructor.
     * @property {module:model/TransferStatusFlow}
     */
    TransferStatusFlow: TransferStatusFlow,
    /**
     * The TransferStatusFlowForTransferView model constructor.
     * @property {module:model/TransferStatusFlowForTransferView}
     */
    TransferStatusFlowForTransferView: TransferStatusFlowForTransferView,
    /**
     * The TransferStatusLog model constructor.
     * @property {module:model/TransferStatusLog}
     */
    TransferStatusLog: TransferStatusLog,
    /**
     * The TransferType model constructor.
     * @property {module:model/TransferType}
     */
    TransferType: TransferType,
    /**
     * The TransferView model constructor.
     * @property {module:model/TransferView}
     */
    TransferView: TransferView,
    /**
     * The UIElementWithContent model constructor.
     * @property {module:model/UIElementWithContent}
     */
    UIElementWithContent: UIElementWithContent,
    /**
     * The UnauthorizedError model constructor.
     * @property {module:model/UnauthorizedError}
     */
    UnauthorizedError: UnauthorizedError,
    /**
     * The UnauthorizedErrorCode model constructor.
     * @property {module:model/UnauthorizedErrorCode}
     */
    UnauthorizedErrorCode: UnauthorizedErrorCode,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAdDataForSearch model constructor.
     * @property {module:model/UserAdDataForSearch}
     */
    UserAdDataForSearch: UserAdDataForSearch,
    /**
     * The UserAddressesListData model constructor.
     * @property {module:model/UserAddressesListData}
     */
    UserAddressesListData: UserAddressesListData,
    /**
     * The UserBalancesOrderByEnum model constructor.
     * @property {module:model/UserBalancesOrderByEnum}
     */
    UserBalancesOrderByEnum: UserBalancesOrderByEnum,
    /**
     * The UserBalancesSummary model constructor.
     * @property {module:model/UserBalancesSummary}
     */
    UserBalancesSummary: UserBalancesSummary,
    /**
     * The UserBasicData model constructor.
     * @property {module:model/UserBasicData}
     */
    UserBasicData: UserBasicData,
    /**
     * The UserClientTypePermissions model constructor.
     * @property {module:model/UserClientTypePermissions}
     */
    UserClientTypePermissions: UserClientTypePermissions,
    /**
     * The UserContactPermissions model constructor.
     * @property {module:model/UserContactPermissions}
     */
    UserContactPermissions: UserContactPermissions,
    /**
     * The UserCustomFieldValue model constructor.
     * @property {module:model/UserCustomFieldValue}
     */
    UserCustomFieldValue: UserCustomFieldValue,
    /**
     * The UserDataForEdit model constructor.
     * @property {module:model/UserDataForEdit}
     */
    UserDataForEdit: UserDataForEdit,
    /**
     * The UserDataForMap model constructor.
     * @property {module:model/UserDataForMap}
     */
    UserDataForMap: UserDataForMap,
    /**
     * The UserDataForNew model constructor.
     * @property {module:model/UserDataForNew}
     */
    UserDataForNew: UserDataForNew,
    /**
     * The UserDataForSearch model constructor.
     * @property {module:model/UserDataForSearch}
     */
    UserDataForSearch: UserDataForSearch,
    /**
     * The UserEdit model constructor.
     * @property {module:model/UserEdit}
     */
    UserEdit: UserEdit,
    /**
     * The UserImageKind model constructor.
     * @property {module:model/UserImageKind}
     */
    UserImageKind: UserImageKind,
    /**
     * The UserManage model constructor.
     * @property {module:model/UserManage}
     */
    UserManage: UserManage,
    /**
     * The UserMarketplacePermissions model constructor.
     * @property {module:model/UserMarketplacePermissions}
     */
    UserMarketplacePermissions: UserMarketplacePermissions,
    /**
     * The UserNew model constructor.
     * @property {module:model/UserNew}
     */
    UserNew: UserNew,
    /**
     * The UserOperatorsDataForSearch model constructor.
     * @property {module:model/UserOperatorsDataForSearch}
     */
    UserOperatorsDataForSearch: UserOperatorsDataForSearch,
    /**
     * The UserOrderByEnum model constructor.
     * @property {module:model/UserOrderByEnum}
     */
    UserOrderByEnum: UserOrderByEnum,
    /**
     * The UserPaymentPermissions model constructor.
     * @property {module:model/UserPaymentPermissions}
     */
    UserPaymentPermissions: UserPaymentPermissions,
    /**
     * The UserPermissions model constructor.
     * @property {module:model/UserPermissions}
     */
    UserPermissions: UserPermissions,
    /**
     * The UserPhonesListData model constructor.
     * @property {module:model/UserPhonesListData}
     */
    UserPhonesListData: UserPhonesListData,
    /**
     * The UserProfilePermissions model constructor.
     * @property {module:model/UserProfilePermissions}
     */
    UserProfilePermissions: UserProfilePermissions,
    /**
     * The UserRegistrationPrincipal model constructor.
     * @property {module:model/UserRegistrationPrincipal}
     */
    UserRegistrationPrincipal: UserRegistrationPrincipal,
    /**
     * The UserRegistrationResult model constructor.
     * @property {module:model/UserRegistrationResult}
     */
    UserRegistrationResult: UserRegistrationResult,
    /**
     * The UserRegistrationStatusEnum model constructor.
     * @property {module:model/UserRegistrationStatusEnum}
     */
    UserRegistrationStatusEnum: UserRegistrationStatusEnum,
    /**
     * The UserResult model constructor.
     * @property {module:model/UserResult}
     */
    UserResult: UserResult,
    /**
     * The UserStatusEnum model constructor.
     * @property {module:model/UserStatusEnum}
     */
    UserStatusEnum: UserStatusEnum,
    /**
     * The UserView model constructor.
     * @property {module:model/UserView}
     */
    UserView: UserView,
    /**
     * The UserVouchersDataForSearch model constructor.
     * @property {module:model/UserVouchersDataForSearch}
     */
    UserVouchersDataForSearch: UserVouchersDataForSearch,
    /**
     * The UserWithBalanceResult model constructor.
     * @property {module:model/UserWithBalanceResult}
     */
    UserWithBalanceResult: UserWithBalanceResult,
    /**
     * The UsersPermissions model constructor.
     * @property {module:model/UsersPermissions}
     */
    UsersPermissions: UsersPermissions,
    /**
     * The VersionedEntity model constructor.
     * @property {module:model/VersionedEntity}
     */
    VersionedEntity: VersionedEntity,
    /**
     * The Voucher model constructor.
     * @property {module:model/Voucher}
     */
    Voucher: Voucher,
    /**
     * The VoucherBasicData model constructor.
     * @property {module:model/VoucherBasicData}
     */
    VoucherBasicData: VoucherBasicData,
    /**
     * The VoucherConfiguration model constructor.
     * @property {module:model/VoucherConfiguration}
     */
    VoucherConfiguration: VoucherConfiguration,
    /**
     * The VoucherCreationTypeEnum model constructor.
     * @property {module:model/VoucherCreationTypeEnum}
     */
    VoucherCreationTypeEnum: VoucherCreationTypeEnum,
    /**
     * The VoucherDataForBuy model constructor.
     * @property {module:model/VoucherDataForBuy}
     */
    VoucherDataForBuy: VoucherDataForBuy,
    /**
     * The VoucherDataForRedeem model constructor.
     * @property {module:model/VoucherDataForRedeem}
     */
    VoucherDataForRedeem: VoucherDataForRedeem,
    /**
     * The VoucherInitialDataForRedeem model constructor.
     * @property {module:model/VoucherInitialDataForRedeem}
     */
    VoucherInitialDataForRedeem: VoucherInitialDataForRedeem,
    /**
     * The VoucherRedeemResult model constructor.
     * @property {module:model/VoucherRedeemResult}
     */
    VoucherRedeemResult: VoucherRedeemResult,
    /**
     * The VoucherRelationEnum model constructor.
     * @property {module:model/VoucherRelationEnum}
     */
    VoucherRelationEnum: VoucherRelationEnum,
    /**
     * The VoucherResult model constructor.
     * @property {module:model/VoucherResult}
     */
    VoucherResult: VoucherResult,
    /**
     * The VoucherStatusEnum model constructor.
     * @property {module:model/VoucherStatusEnum}
     */
    VoucherStatusEnum: VoucherStatusEnum,
    /**
     * The VoucherType model constructor.
     * @property {module:model/VoucherType}
     */
    VoucherType: VoucherType,
    /**
     * The VoucherView model constructor.
     * @property {module:model/VoucherView}
     */
    VoucherView: VoucherView,
    /**
     * The WeekDayEnum model constructor.
     * @property {module:model/WeekDayEnum}
     */
    WeekDayEnum: WeekDayEnum,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The AddressesApi service constructor.
     * @property {module:api/AddressesApi}
     */
    AddressesApi: AddressesApi,
    /**
     * The AgreementsApi service constructor.
     * @property {module:api/AgreementsApi}
     */
    AgreementsApi: AgreementsApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The CaptchaApi service constructor.
     * @property {module:api/CaptchaApi}
     */
    CaptchaApi: CaptchaApi,
    /**
     * The ClientsApi service constructor.
     * @property {module:api/ClientsApi}
     */
    ClientsApi: ClientsApi,
    /**
     * The ContactsApi service constructor.
     * @property {module:api/ContactsApi}
     */
    ContactsApi: ContactsApi,
    /**
     * The ImagesApi service constructor.
     * @property {module:api/ImagesApi}
     */
    ImagesApi: ImagesApi,
    /**
     * The MarketplaceApi service constructor.
     * @property {module:api/MarketplaceApi}
     */
    MarketplaceApi: MarketplaceApi,
    /**
     * The MobileApi service constructor.
     * @property {module:api/MobileApi}
     */
    MobileApi: MobileApi,
    /**
     * The NFCApi service constructor.
     * @property {module:api/NFCApi}
     */
    NFCApi: NFCApi,
    /**
     * The OperationsApi service constructor.
     * @property {module:api/OperationsApi}
     */
    OperationsApi: OperationsApi,
    /**
     * The OperatorsApi service constructor.
     * @property {module:api/OperatorsApi}
     */
    OperatorsApi: OperatorsApi,
    /**
     * The POSApi service constructor.
     * @property {module:api/POSApi}
     */
    POSApi: POSApi,
    /**
     * The PasswordsApi service constructor.
     * @property {module:api/PasswordsApi}
     */
    PasswordsApi: PasswordsApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi,
    /**
     * The PhonesApi service constructor.
     * @property {module:api/PhonesApi}
     */
    PhonesApi: PhonesApi,
    /**
     * The RecordsApi service constructor.
     * @property {module:api/RecordsApi}
     */
    RecordsApi: RecordsApi,
    /**
     * The TransactionsApi service constructor.
     * @property {module:api/TransactionsApi}
     */
    TransactionsApi: TransactionsApi,
    /**
     * The TransfersApi service constructor.
     * @property {module:api/TransfersApi}
     */
    TransfersApi: TransfersApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The VouchersApi service constructor.
     * @property {module:api/VouchersApi}
     */
    VouchersApi: VouchersApi
  };

  return exports;
}));
