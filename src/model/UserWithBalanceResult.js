/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/BalanceLevelEnum', 'model/BigDecimal', 'model/EntityReference', 'model/Image', 'model/User', 'model/UserResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Address'), require('./BalanceLevelEnum'), require('./BigDecimal'), require('./EntityReference'), require('./Image'), require('./User'), require('./UserResult'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.UserWithBalanceResult = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.Address, root.Cyclos471Api.BalanceLevelEnum, root.Cyclos471Api.BigDecimal, root.Cyclos471Api.EntityReference, root.Cyclos471Api.Image, root.Cyclos471Api.User, root.Cyclos471Api.UserResult);
  }
}(this, function(ApiClient, Address, BalanceLevelEnum, BigDecimal, EntityReference, Image, User, UserResult) {
  'use strict';




  /**
   * The UserWithBalanceResult model module.
   * @module model/UserWithBalanceResult
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>UserWithBalanceResult</code>.
   * Result of an user search with balance 
   * @alias module:model/UserWithBalanceResult
   * @class
   * @implements module:model/UserResult
   */
  var exports = function() {
    var _this = this;

    UserResult.call(_this);



  };

  /**
   * Constructs a <code>UserWithBalanceResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserWithBalanceResult} obj Optional instance to populate.
   * @return {module:model/UserWithBalanceResult} The populated <code>UserWithBalanceResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      UserResult.constructFromObject(data, obj);
      if (data.hasOwnProperty('balance')) {
        obj['balance'] = ApiClient.convertToType(data['balance'], BigDecimal);
      }
      if (data.hasOwnProperty('balanceLevel')) {
        obj['balanceLevel'] = BalanceLevelEnum.constructFromObject(data['balanceLevel']);
      }
      if (data.hasOwnProperty('negativeSince')) {
        obj['negativeSince'] = ApiClient.convertToType(data['negativeSince'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The raw account balance
   * @member {module:model/BigDecimal} balance
   */
  exports.prototype['balance'] = undefined;
  /**
   * Contains the possible balance levels on the users with balances search  Possible values are: * low: Low balance, below the medium balance range lower bound * medium: Medium balance, between the lower and upper bounds of the medium balance range * high: High balance, above the medium balance range upper bound 
   * @member {module:model/BalanceLevelEnum} balanceLevel
   */
  exports.prototype['balanceLevel'] = undefined;
  /**
   * The date since the account has been negative
   * @member {Date} negativeSince
   */
  exports.prototype['negativeSince'] = undefined;

  // Implement UserResult interface:
  /**
   * Entity identifier
   * @member {String} id
   */
exports.prototype['id'] = undefined;

  /**
   * Contains the formatting of the user according to the  configuration. Is only returned if no profile fields are marked to return in user list 
   * @member {String} display
   */
exports.prototype['display'] = undefined;

  /**
   * Contains the short formatting of the user according to the configuration. Is only returned if no profile fields are marked to return in user list 
   * @member {String} shortDisplay
   */
exports.prototype['shortDisplay'] = undefined;

  /**
   * The primary user profile image
   * @member {module:model/Image} image
   */
exports.prototype['image'] = undefined;

  /**
   * Is the operator owner, only returned if this user represents an operator. Even so, in some cases, like searching for operators of a specific user, this field may not be returned. 
   * @member {module:model/User} user
   */
exports.prototype['user'] = undefined;

  /**
   * The user's full name
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * The user's login name
   * @member {String} username
   */
exports.prototype['username'] = undefined;

  /**
   * The user's e-mail
   * @member {String} email
   */
exports.prototype['email'] = undefined;

  /**
   * Address to be placed on map. Is only returned when the search result type is `map`. 
   * @member {module:model/Address} address
   */
exports.prototype['address'] = undefined;

  /**
   * Only returned when there is a base location to calculate the distance from. The unit (kilometers or miles) depends on configuration. 
   * @member {Number} distance
   */
exports.prototype['distance'] = undefined;

  /**
   * Holds the values for custom fields, keyed by field internal name or id. The format of the value depends on the custom field type. Example: `{..., \"customValues\": {\"gender\": \"male\", \"birthDate\": \"1980-10-27\"}}` 
   * @member {Object.<String, String>} customValues
   */
exports.prototype['customValues'] = undefined;

  /**
   * First phone number, used when phone is marked on products to be returned on user list 
   * @member {String} phone
   */
exports.prototype['phone'] = undefined;

  /**
   * First account number, used when account number is marked on products to be returned on user list 
   * @member {String} accountNumber
   */
exports.prototype['accountNumber'] = undefined;

  /**
   * The user group. Only returned when the `includeGroup` parameter is set to `true` and the current user can see other users' groups. 
   * @member {module:model/EntityReference} group
   */
exports.prototype['group'] = undefined;

  /**
   * The user group. Only returned when the `includeGroupSet` parameter is set to `true` and the current user can see other users' group set. 
   * @member {module:model/EntityReference} groupSet
   */
exports.prototype['groupSet'] = undefined;



  return exports;
}));


