/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PhoneKind', 'model/PhoneManage'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PhoneKind'), require('./PhoneManage'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.PhoneNew = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.PhoneKind, root.Cyclos471Api.PhoneManage);
  }
}(this, function(ApiClient, PhoneKind, PhoneManage) {
  'use strict';




  /**
   * The PhoneNew model module.
   * @module model/PhoneNew
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>PhoneNew</code>.
   * Parameters for creating a new phone
   * @alias module:model/PhoneNew
   * @class
   * @implements module:model/PhoneManage
   */
  var exports = function() {
    var _this = this;

    PhoneManage.call(_this);

  };

  /**
   * Constructs a <code>PhoneNew</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PhoneNew} obj Optional instance to populate.
   * @return {module:model/PhoneNew} The populated <code>PhoneNew</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      PhoneManage.constructFromObject(data, obj);
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = PhoneKind.constructFromObject(data['kind']);
      }
    }
    return obj;
  }

  /**
   * Type of phone Possible values are: * mobile: A mobile phone * landLine: A landline phone 
   * @member {module:model/PhoneKind} kind
   */
  exports.prototype['kind'] = undefined;

  // Implement PhoneManage interface:
  /**
   * The phone name
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * The formatted number
   * @member {String} number
   */
exports.prototype['number'] = undefined;

  /**
   * The number extension, only for landLine phones, and is only used if the phone configuration states that extensions are enabled.  
   * @member {String} extension
   */
exports.prototype['extension'] = undefined;

  /**
   * Only applicable if this represents a mobile phone. Whether this mobile phone is enabled for SMS, both receiving notifications and sending SMS operations. Can only be set if the mobile phone is verified. 
   * @member {Boolean} enabledForSms
   */
exports.prototype['enabledForSms'] = undefined;

  /**
   * Only applicable if this represents a mobile phone. Whether this mobile is verified. Can only be directly set by administrators. Regular users need to verify it. 
   * @member {Boolean} verified
   */
exports.prototype['verified'] = undefined;



  return exports;
}));


