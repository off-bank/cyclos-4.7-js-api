/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountWithCurrency', 'model/EntityReference'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountWithCurrency'), require('./EntityReference'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.AccountPermissions = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.AccountWithCurrency, root.Cyclos471Api.EntityReference);
  }
}(this, function(ApiClient, AccountWithCurrency, EntityReference) {
  'use strict';




  /**
   * The AccountPermissions model module.
   * @module model/AccountPermissions
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>AccountPermissions</code>.
   * Permissions over an account
   * @alias module:model/AccountPermissions
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>AccountPermissions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountPermissions} obj Optional instance to populate.
   * @return {module:model/AccountPermissions} The populated <code>AccountPermissions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('account')) {
        obj['account'] = AccountWithCurrency.constructFromObject(data['account']);
      }
      if (data.hasOwnProperty('systemPayments')) {
        obj['systemPayments'] = ApiClient.convertToType(data['systemPayments'], [EntityReference]);
      }
      if (data.hasOwnProperty('userPayments')) {
        obj['userPayments'] = ApiClient.convertToType(data['userPayments'], [EntityReference]);
      }
      if (data.hasOwnProperty('selfPayments')) {
        obj['selfPayments'] = ApiClient.convertToType(data['selfPayments'], [EntityReference]);
      }
      if (data.hasOwnProperty('posPayments')) {
        obj['posPayments'] = ApiClient.convertToType(data['posPayments'], [EntityReference]);
      }
    }
    return obj;
  }

  /**
   * The account
   * @member {module:model/AccountWithCurrency} account
   */
  exports.prototype['account'] = undefined;
  /**
   * Payment types allowed to be performed to system accounts
   * @member {Array.<module:model/EntityReference>} systemPayments
   */
  exports.prototype['systemPayments'] = undefined;
  /**
   * Payment types allowed to be performed to other users
   * @member {Array.<module:model/EntityReference>} userPayments
   */
  exports.prototype['userPayments'] = undefined;
  /**
   * Payment types allowed to be performed to other self accounts
   * @member {Array.<module:model/EntityReference>} selfPayments
   */
  exports.prototype['selfPayments'] = undefined;
  /**
   * Payment types allowed to be used on POS (receive payments from other users) 
   * @member {Array.<module:model/EntityReference>} posPayments
   */
  exports.prototype['posPayments'] = undefined;



  return exports;
}));


