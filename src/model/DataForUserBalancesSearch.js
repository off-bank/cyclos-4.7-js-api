/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseUserDataForSearch', 'model/BasicProfileFieldInput', 'model/CustomFieldDetailed', 'model/EntityReference', 'model/Group', 'model/SearchByDistanceData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BaseUserDataForSearch'), require('./BasicProfileFieldInput'), require('./CustomFieldDetailed'), require('./EntityReference'), require('./Group'), require('./SearchByDistanceData'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.DataForUserBalancesSearch = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.BaseUserDataForSearch, root.Cyclos471Api.BasicProfileFieldInput, root.Cyclos471Api.CustomFieldDetailed, root.Cyclos471Api.EntityReference, root.Cyclos471Api.Group, root.Cyclos471Api.SearchByDistanceData);
  }
}(this, function(ApiClient, BaseUserDataForSearch, BasicProfileFieldInput, CustomFieldDetailed, EntityReference, Group, SearchByDistanceData) {
  'use strict';




  /**
   * The DataForUserBalancesSearch model module.
   * @module model/DataForUserBalancesSearch
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>DataForUserBalancesSearch</code>.
   * Data used for an user search together with account balances
   * @alias module:model/DataForUserBalancesSearch
   * @class
   * @implements module:model/BaseUserDataForSearch
   */
  var exports = function() {
    var _this = this;

    BaseUserDataForSearch.call(_this);

  };

  /**
   * Constructs a <code>DataForUserBalancesSearch</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataForUserBalancesSearch} obj Optional instance to populate.
   * @return {module:model/DataForUserBalancesSearch} The populated <code>DataForUserBalancesSearch</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      BaseUserDataForSearch.constructFromObject(data, obj);
      if (data.hasOwnProperty('accountTypes')) {
        obj['accountTypes'] = ApiClient.convertToType(data['accountTypes'], [EntityReference]);
      }
    }
    return obj;
  }

  /**
   * The available account types for the search
   * @member {Array.<module:model/EntityReference>} accountTypes
   */
  exports.prototype['accountTypes'] = undefined;

  // Implement BaseUserDataForSearch interface:
  /**
   * The internal names of either basic or custom profile fields or which  can be used as search filters (separated fields, not keywords)  
   * @member {Array.<String>} fieldsInSearch
   */
exports.prototype['fieldsInSearch'] = undefined;

  /**
   * The list of basic profile fields that can be used either as search filters (if the internal names are present in the `fieldsInSearch` property) or on the result list (if the internal names are present in the `fieldsInList` property) 
   * @member {Array.<module:model/BasicProfileFieldInput>} basicFields
   */
exports.prototype['basicFields'] = undefined;

  /**
   * The list of custom profile fields that can be used either as search filters (if the internal names are present in the `fieldsInSearch` property) or on the result list (if the internal names are present in the `fieldsInList` property) 
   * @member {Array.<module:model/CustomFieldDetailed>} customFields
   */
exports.prototype['customFields'] = undefined;

  /**
   * The groups the authenticated user can use to filter users. Admins can always filter by groups, while users depend on a permission, which can be to only view group sets, only groups or none. 
   * @member {Array.<module:model/Group>} groups
   */
exports.prototype['groups'] = undefined;

  /**
   * The internal names (or ids, if missing) of the groups which should be presented by default on user search 
   * @member {Array.<String>} defaultGroups
   */
exports.prototype['defaultGroups'] = undefined;

  /**
   * Data for searching users by distance
   * @member {module:model/SearchByDistanceData} searchByDistanceData
   */
exports.prototype['searchByDistanceData'] = undefined;



  return exports;
}));


