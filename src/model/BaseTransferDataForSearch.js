/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityReference', 'model/Group', 'model/PreselectedPeriod', 'model/TransferFilter', 'model/User'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntityReference'), require('./Group'), require('./PreselectedPeriod'), require('./TransferFilter'), require('./User'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.BaseTransferDataForSearch = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.EntityReference, root.Cyclos471Api.Group, root.Cyclos471Api.PreselectedPeriod, root.Cyclos471Api.TransferFilter, root.Cyclos471Api.User);
  }
}(this, function(ApiClient, EntityReference, Group, PreselectedPeriod, TransferFilter, User) {
  'use strict';




  /**
   * The BaseTransferDataForSearch model module.
   * @module model/BaseTransferDataForSearch
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>BaseTransferDataForSearch</code>.
   * Contains basic information used to search for transfers
   * @alias module:model/BaseTransferDataForSearch
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>BaseTransferDataForSearch</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BaseTransferDataForSearch} obj Optional instance to populate.
   * @return {module:model/BaseTransferDataForSearch} The populated <code>BaseTransferDataForSearch</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('transferFilters')) {
        obj['transferFilters'] = ApiClient.convertToType(data['transferFilters'], [TransferFilter]);
      }
      if (data.hasOwnProperty('channels')) {
        obj['channels'] = ApiClient.convertToType(data['channels'], [EntityReference]);
      }
      if (data.hasOwnProperty('groups')) {
        obj['groups'] = ApiClient.convertToType(data['groups'], [Group]);
      }
      if (data.hasOwnProperty('accessClients')) {
        obj['accessClients'] = ApiClient.convertToType(data['accessClients'], [EntityReference]);
      }
      if (data.hasOwnProperty('operators')) {
        obj['operators'] = ApiClient.convertToType(data['operators'], [User]);
      }
      if (data.hasOwnProperty('preselectedPeriods')) {
        obj['preselectedPeriods'] = ApiClient.convertToType(data['preselectedPeriods'], [PreselectedPeriod]);
      }
    }
    return obj;
  }

  /**
   * References for transfer filters, which can be used to filter entries by transfer type 
   * @member {Array.<module:model/TransferFilter>} transferFilters
   */
  exports.prototype['transferFilters'] = undefined;
  /**
   * References for channels which can be used to filter entries by transfers generated on a specific channel. Is only returned if the authenticated user is an administrator. 
   * @member {Array.<module:model/EntityReference>} channels
   */
  exports.prototype['channels'] = undefined;
  /**
   * Groups that can be used to filter entries, so that only transfers from or to users of those groups are returned on search. Is only returned if the authenticated user is an administrator. 
   * @member {Array.<module:model/Group>} groups
   */
  exports.prototype['groups'] = undefined;
  /**
   * References for access clients which can be used to filter entries by transfers generated by a specific access client  
   * @member {Array.<module:model/EntityReference>} accessClients
   */
  exports.prototype['accessClients'] = undefined;
  /**
   * References for operators, which can be used to filter entries by transfers performed or received by that specific operator  
   * @member {Array.<module:model/User>} operators
   */
  exports.prototype['operators'] = undefined;
  /**
   * Contains the pre-selected period filter ranges according to the Cyclos configuration   
   * @member {Array.<module:model/PreselectedPeriod>} preselectedPeriods
   */
  exports.prototype['preselectedPeriods'] = undefined;



  return exports;
}));


