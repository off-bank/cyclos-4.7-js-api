/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadRequestErrorCode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BadRequestErrorCode'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.BadRequestError = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.BadRequestErrorCode);
  }
}(this, function(ApiClient, BadRequestErrorCode) {
  'use strict';




  /**
   * The BadRequestError model module.
   * @module model/BadRequestError
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>BadRequestError</code>.
   * Error returned when the request format / body is not in the expected format
   * @alias module:model/BadRequestError
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>BadRequestError</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BadRequestError} obj Optional instance to populate.
   * @return {module:model/BadRequestError} The populated <code>BadRequestError</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code'] = BadRequestErrorCode.constructFromObject(data['code']);
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('line')) {
        obj['line'] = ApiClient.convertToType(data['line'], 'Number');
      }
      if (data.hasOwnProperty('column')) {
        obj['column'] = ApiClient.convertToType(data['column'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Error codes for 400 Bad request HTTP status  Possible values are: * json: Error in the JSON format * general: Bad request format 
   * @member {module:model/BadRequestErrorCode} code
   */
  exports.prototype['code'] = undefined;
  /**
   * A (technical) message explaining the problem
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * The request body line that shows the problem
   * @member {Number} line
   */
  exports.prototype['line'] = undefined;
  /**
   * The request body column that shows the problem
   * @member {Number} column
   */
  exports.prototype['column'] = undefined;



  return exports;
}));


