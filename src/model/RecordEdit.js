/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RecordManage'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RecordManage'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.RecordEdit = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.RecordManage);
  }
}(this, function(ApiClient, RecordManage) {
  'use strict';




  /**
   * The RecordEdit model module.
   * @module model/RecordEdit
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>RecordEdit</code>.
   * Parameters for editing an existing record
   * @alias module:model/RecordEdit
   * @class
   * @implements module:model/RecordManage
   */
  var exports = function() {
    var _this = this;

    RecordManage.call(_this);

  };

  /**
   * Constructs a <code>RecordEdit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RecordEdit} obj Optional instance to populate.
   * @return {module:model/RecordEdit} The populated <code>RecordEdit</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      RecordManage.constructFromObject(data, obj);
      if (data.hasOwnProperty('version')) {
        obj['version'] = ApiClient.convertToType(data['version'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The version stamp for the current object, used for optimistic locking. When saving, the same version as previously received needs to be passed back. If no one else has saved the object, the version will match and the object will be updated. However, if someone other has saved the object, the version will no longer match, and an error will be raised. This is used to prevent multiple users (or processes) from updating the same object and unwilingly overridding the property values, leading to data loss.  
   * @member {Number} version
   */
  exports.prototype['version'] = undefined;

  // Implement RecordManage interface:
  /**
   * Holds the custom field values, keyed by field internal name or id. The format of the value depends on the custom field type. Example: `{..., \"customValues\": {\"gender\": \"male\", \"birthDate\": \"1980-10-27\"}}` 
   * @member {Object.<String, String>} customValues
   */
exports.prototype['customValues'] = undefined;



  return exports;
}));


