/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BigDecimal', 'model/TransferFeePreview'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BigDecimal'), require('./TransferFeePreview'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.ScheduledPaymentInstallmentPreview = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.BigDecimal, root.Cyclos471Api.TransferFeePreview);
  }
}(this, function(ApiClient, BigDecimal, TransferFeePreview) {
  'use strict';




  /**
   * The ScheduledPaymentInstallmentPreview model module.
   * @module model/ScheduledPaymentInstallmentPreview
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>ScheduledPaymentInstallmentPreview</code>.
   * Preview of a direct or scheduled payment
   * @alias module:model/ScheduledPaymentInstallmentPreview
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>ScheduledPaymentInstallmentPreview</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ScheduledPaymentInstallmentPreview} obj Optional instance to populate.
   * @return {module:model/ScheduledPaymentInstallmentPreview} The populated <code>ScheduledPaymentInstallmentPreview</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'Number');
      }
      if (data.hasOwnProperty('dueDate')) {
        obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'Date');
      }
      if (data.hasOwnProperty('totalAmount')) {
        obj['totalAmount'] = ApiClient.convertToType(data['totalAmount'], BigDecimal);
      }
      if (data.hasOwnProperty('mainAmount')) {
        obj['mainAmount'] = ApiClient.convertToType(data['mainAmount'], BigDecimal);
      }
      if (data.hasOwnProperty('fees')) {
        obj['fees'] = ApiClient.convertToType(data['fees'], [TransferFeePreview]);
      }
    }
    return obj;
  }

  /**
   * The installment number
   * @member {Number} number
   */
  exports.prototype['number'] = undefined;
  /**
   * The installment due date
   * @member {Date} dueDate
   */
  exports.prototype['dueDate'] = undefined;
  /**
   * The final total installment amount
   * @member {module:model/BigDecimal} totalAmount
   */
  exports.prototype['totalAmount'] = undefined;
  /**
   * Depending on the configured fees, it could happen that the main amount is deducted from fees amount. This reflects the new main amount. If no fees deduct, it will be the same as `totalAmount`. 
   * @member {module:model/BigDecimal} mainAmount
   */
  exports.prototype['mainAmount'] = undefined;
  /**
   * Only returned for direct payments. Contains the fees that would be paid by the payer if the payment is confirmed. 
   * @member {Array.<module:model/TransferFeePreview>} fees
   */
  exports.prototype['fees'] = undefined;



  return exports;
}));


