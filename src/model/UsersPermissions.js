/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.UsersPermissions = factory(root.Cyclos471Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UsersPermissions model module.
   * @module model/UsersPermissions
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>UsersPermissions</code>.
   * Permissions over other users
   * @alias module:model/UsersPermissions
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>UsersPermissions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UsersPermissions} obj Optional instance to populate.
   * @return {module:model/UsersPermissions} The populated <code>UsersPermissions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('search')) {
        obj['search'] = ApiClient.convertToType(data['search'], 'Boolean');
      }
      if (data.hasOwnProperty('viewProfile')) {
        obj['viewProfile'] = ApiClient.convertToType(data['viewProfile'], 'Boolean');
      }
      if (data.hasOwnProperty('map')) {
        obj['map'] = ApiClient.convertToType(data['map'], 'Boolean');
      }
      if (data.hasOwnProperty('contacts')) {
        obj['contacts'] = ApiClient.convertToType(data['contacts'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Permission to search other users
   * @member {Boolean} search
   */
  exports.prototype['search'] = undefined;
  /**
   * General permission to view the profile of other users. A fine-grained permission over specific groups can be configured. When attempting to view the profile of an user without permission, only very basic information is returned instead. 
   * @member {Boolean} viewProfile
   */
  exports.prototype['viewProfile'] = undefined;
  /**
   * Permission to view the user map directory
   * @member {Boolean} map
   */
  exports.prototype['map'] = undefined;
  /**
   * Permission to own a contact list
   * @member {Boolean} contacts
   */
  exports.prototype['contacts'] = undefined;



  return exports;
}));


