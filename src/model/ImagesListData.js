/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Image'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Image'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.ImagesListData = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.Image);
  }
}(this, function(ApiClient, Image) {
  'use strict';




  /**
   * The ImagesListData model module.
   * @module model/ImagesListData
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>ImagesListData</code>.
   * Contains information for a list of images, such as permissions and the list of images itself 
   * @alias module:model/ImagesListData
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>ImagesListData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ImagesListData} obj Optional instance to populate.
   * @return {module:model/ImagesListData} The populated <code>ImagesListData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('canManage')) {
        obj['canManage'] = ApiClient.convertToType(data['canManage'], 'Boolean');
      }
      if (data.hasOwnProperty('maxImages')) {
        obj['maxImages'] = ApiClient.convertToType(data['maxImages'], 'Number');
      }
      if (data.hasOwnProperty('images')) {
        obj['images'] = ApiClient.convertToType(data['images'], [Image]);
      }
    }
    return obj;
  }

  /**
   * Does the authenticated user has permission to manage these images? 
   * @member {Boolean} canManage
   */
  exports.prototype['canManage'] = undefined;
  /**
   * The maximum number of images allowed
   * @member {Number} maxImages
   */
  exports.prototype['maxImages'] = undefined;
  /**
   * The list of images
   * @member {Array.<module:model/Image>} images
   */
  exports.prototype['images'] = undefined;



  return exports;
}));


