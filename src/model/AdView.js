/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AdCategoryWithParent', 'model/AdDetailed', 'model/AdKind', 'model/AdStatusEnum', 'model/Address', 'model/BigDecimal', 'model/Currency', 'model/CustomFieldValue', 'model/DatePeriod', 'model/Image', 'model/User'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AdCategoryWithParent'), require('./AdDetailed'), require('./AdKind'), require('./AdStatusEnum'), require('./Address'), require('./BigDecimal'), require('./Currency'), require('./CustomFieldValue'), require('./DatePeriod'), require('./Image'), require('./User'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.AdView = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.AdCategoryWithParent, root.Cyclos471Api.AdDetailed, root.Cyclos471Api.AdKind, root.Cyclos471Api.AdStatusEnum, root.Cyclos471Api.Address, root.Cyclos471Api.BigDecimal, root.Cyclos471Api.Currency, root.Cyclos471Api.CustomFieldValue, root.Cyclos471Api.DatePeriod, root.Cyclos471Api.Image, root.Cyclos471Api.User);
  }
}(this, function(ApiClient, AdCategoryWithParent, AdDetailed, AdKind, AdStatusEnum, Address, BigDecimal, Currency, CustomFieldValue, DatePeriod, Image, User) {
  'use strict';




  /**
   * The AdView model module.
   * @module model/AdView
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>AdView</code>.
   * Detailed information when viewing a advertisement
   * @alias module:model/AdView
   * @class
   * @implements module:model/AdDetailed
   */
  var exports = function() {
    var _this = this;

    AdDetailed.call(_this);









  };

  /**
   * Constructs a <code>AdView</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AdView} obj Optional instance to populate.
   * @return {module:model/AdView} The populated <code>AdView</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      AdDetailed.constructFromObject(data, obj);
      if (data.hasOwnProperty('categories')) {
        obj['categories'] = ApiClient.convertToType(data['categories'], [AdCategoryWithParent]);
      }
      if (data.hasOwnProperty('customValues')) {
        obj['customValues'] = ApiClient.convertToType(data['customValues'], [CustomFieldValue]);
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = Currency.constructFromObject(data['currency']);
      }
      if (data.hasOwnProperty('promotionalPrice')) {
        obj['promotionalPrice'] = ApiClient.convertToType(data['promotionalPrice'], BigDecimal);
      }
      if (data.hasOwnProperty('promotionalPeriod')) {
        obj['promotionalPeriod'] = DatePeriod.constructFromObject(data['promotionalPeriod']);
      }
      if (data.hasOwnProperty('promotionalPeriodActive')) {
        obj['promotionalPeriodActive'] = ApiClient.convertToType(data['promotionalPeriodActive'], 'Boolean');
      }
      if (data.hasOwnProperty('canManage')) {
        obj['canManage'] = ApiClient.convertToType(data['canManage'], 'Boolean');
      }
      if (data.hasOwnProperty('additionalImages')) {
        obj['additionalImages'] = ApiClient.convertToType(data['additionalImages'], [Image]);
      }
      if (data.hasOwnProperty('addresses')) {
        obj['addresses'] = ApiClient.convertToType(data['addresses'], [Address]);
      }
    }
    return obj;
  }

  /**
   * Either internal name or id of categories this ad belongs to. In most cases an advertisement will have a single category, but this depends on the Cyclos configuration. 
   * @member {Array.<module:model/AdCategoryWithParent>} categories
   */
  exports.prototype['categories'] = undefined;
  /**
   * The list of custom field values this advertisement has
   * @member {Array.<module:model/CustomFieldValue>} customValues
   */
  exports.prototype['customValues'] = undefined;
  /**
   * The advertisement's price currency
   * @member {module:model/Currency} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * The promotional price, to be applied on the promotional period is active 
   * @member {module:model/BigDecimal} promotionalPrice
   */
  exports.prototype['promotionalPrice'] = undefined;
  /**
   * The promotional period, the one when `promotionalPrice` is valid 
   * @member {module:model/DatePeriod} promotionalPeriod
   */
  exports.prototype['promotionalPeriod'] = undefined;
  /**
   * Indicates whether the promotional period is active at the moment this data is returned 
   * @member {Boolean} promotionalPeriodActive
   */
  exports.prototype['promotionalPeriodActive'] = undefined;
  /**
   * Can the authenticated user manage this advertisement?
   * @member {Boolean} canManage
   */
  exports.prototype['canManage'] = undefined;
  /**
   * Holds the images other than the primary image, which is returned in the `image` field 
   * @member {Array.<module:model/Image>} additionalImages
   */
  exports.prototype['additionalImages'] = undefined;
  /**
   * The addresses where this advertisement is available. 
   * @member {Array.<module:model/Address>} addresses
   */
  exports.prototype['addresses'] = undefined;

  // Implement AdDetailed interface:
  /**
   * Entity identifier
   * @member {String} id
   */
exports.prototype['id'] = undefined;

  /**
   * The entity name
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * The possible kinds of an advertisement Possible values are: * simple: A simple advertisement that can be viewed, but not directly bought * webshop: An advertisement that is part of an web-shop. Can be bought, there is stock management, etc. 
   * @member {module:model/AdKind} kind
   */
exports.prototype['kind'] = undefined;

  /**
   * The primary advertisement image
   * @member {module:model/Image} image
   */
exports.prototype['image'] = undefined;

  /**
   * The advertisement description content, formatted as HTML 
   * @member {String} description
   */
exports.prototype['description'] = undefined;

  /**
   * The user which owns this advertisement
   * @member {module:model/User} owner
   */
exports.prototype['owner'] = undefined;

  /**
   * The possible status for an advertisement Possible values are: * draft: In draft status, only the owner can see and edit the advertisement. This status is only possible if the system is configured to require authorizations. * pending: The advertisement is pending for an authorization and cannot be seen by other users. This status is only possible if the system is configured to require authorizations. * active: The advertisement is published and can be seen by other users. * scheduled: The advertisement has a future publication period, and cannot be seen by other users.  * expired: The advertisement publication period has already expired, and cannot be seen by other users. * hidden: The advertisement is manually hidden from other users * disabled: The advertisement is disabled because the owner no longer has access to the currency of the advertisement. It cannot be seen by other users. 
   * @member {module:model/AdStatusEnum} status
   */
exports.prototype['status'] = undefined;

  /**
   * The date period this advertisement is published
   * @member {module:model/DatePeriod} publicationPeriod
   */
exports.prototype['publicationPeriod'] = undefined;

  /**
   * The regular price
   * @member {module:model/BigDecimal} price
   */
exports.prototype['price'] = undefined;



  return exports;
}));


