/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityReference', 'model/User', 'model/UserRegistrationPrincipal', 'model/UserRegistrationStatusEnum'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntityReference'), require('./User'), require('./UserRegistrationPrincipal'), require('./UserRegistrationStatusEnum'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.UserRegistrationResult = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.EntityReference, root.Cyclos471Api.User, root.Cyclos471Api.UserRegistrationPrincipal, root.Cyclos471Api.UserRegistrationStatusEnum);
  }
}(this, function(ApiClient, EntityReference, User, UserRegistrationPrincipal, UserRegistrationStatusEnum) {
  'use strict';




  /**
   * The UserRegistrationResult model module.
   * @module model/UserRegistrationResult
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>UserRegistrationResult</code>.
   * Result of an user registration
   * @alias module:model/UserRegistrationResult
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>UserRegistrationResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserRegistrationResult} obj Optional instance to populate.
   * @return {module:model/UserRegistrationResult} The populated <code>UserRegistrationResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('user')) {
        obj['user'] = User.constructFromObject(data['user']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = UserRegistrationStatusEnum.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('generatedPasswords')) {
        obj['generatedPasswords'] = ApiClient.convertToType(data['generatedPasswords'], [EntityReference]);
      }
      if (data.hasOwnProperty('rootUrl')) {
        obj['rootUrl'] = ApiClient.convertToType(data['rootUrl'], 'String');
      }
      if (data.hasOwnProperty('principals')) {
        obj['principals'] = ApiClient.convertToType(data['principals'], [UserRegistrationPrincipal]);
      }
    }
    return obj;
  }

  /**
   * The user that has just been registered
   * @member {module:model/User} user
   */
  exports.prototype['user'] = undefined;
  /**
   * The status of the user after the registration Possible values are: * active: The user is initially active * inactive: The user is initially inactive, and an administrator needs to manually activate the user * emailValidation: The user has received an e-mail, with a link to verify the e-mail address. Once verified, the registration will be complete 
   * @member {module:model/UserRegistrationStatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The types of passwords that were generated
   * @member {Array.<module:model/EntityReference>} generatedPasswords
   */
  exports.prototype['generatedPasswords'] = undefined;
  /**
   * The root URL that can be used to access the web interface
   * @member {String} rootUrl
   */
  exports.prototype['rootUrl'] = undefined;
  /**
   * Contains information about each user principal (identification) and the channels that can be accessed using it 
   * @member {Array.<module:model/UserRegistrationPrincipal>} principals
   */
  exports.prototype['principals'] = undefined;



  return exports;
}));


