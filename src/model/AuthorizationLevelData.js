/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/User'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./User'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.AuthorizationLevelData = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.User);
  }
}(this, function(ApiClient, User) {
  'use strict';




  /**
   * The AuthorizationLevelData model module.
   * @module model/AuthorizationLevelData
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>AuthorizationLevelData</code>.
   * Contains detailed data of a payment&#39;s authorization level. 
   * @alias module:model/AuthorizationLevelData
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>AuthorizationLevelData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuthorizationLevelData} obj Optional instance to populate.
   * @return {module:model/AuthorizationLevelData} The populated <code>AuthorizationLevelData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('allowBroker')) {
        obj['allowBroker'] = ApiClient.convertToType(data['allowBroker'], 'Boolean');
      }
      if (data.hasOwnProperty('allowPayer')) {
        obj['allowPayer'] = ApiClient.convertToType(data['allowPayer'], 'Boolean');
      }
      if (data.hasOwnProperty('allowReceiver')) {
        obj['allowReceiver'] = ApiClient.convertToType(data['allowReceiver'], 'Boolean');
      }
      if (data.hasOwnProperty('allowAdmin')) {
        obj['allowAdmin'] = ApiClient.convertToType(data['allowAdmin'], 'Boolean');
      }
      if (data.hasOwnProperty('brokers')) {
        obj['brokers'] = ApiClient.convertToType(data['brokers'], [User]);
      }
    }
    return obj;
  }

  /**
   * Indicates that any of the payer's brokers can authorize this level.
   * @member {Boolean} allowBroker
   */
  exports.prototype['allowBroker'] = undefined;
  /**
   * Indicates that the payer can authorize this level.
   * @member {Boolean} allowPayer
   */
  exports.prototype['allowPayer'] = undefined;
  /**
   * Indicates that the payer can authorize this level.
   * @member {Boolean} allowReceiver
   */
  exports.prototype['allowReceiver'] = undefined;
  /**
   * Indicates that an administrator can authorize this level.
   * @member {Boolean} allowAdmin
   */
  exports.prototype['allowAdmin'] = undefined;
  /**
   * Contains the brokers that can authorize this level.
   * @member {Array.<module:model/User>} brokers
   */
  exports.prototype['brokers'] = undefined;



  return exports;
}));


