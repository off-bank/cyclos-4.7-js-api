/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RecordType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RecordType'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.RecordBasePermissions = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.RecordType);
  }
}(this, function(ApiClient, RecordType) {
  'use strict';




  /**
   * The RecordBasePermissions model module.
   * @module model/RecordBasePermissions
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>RecordBasePermissions</code>.
   * Basic definitions shared by &#x60;OwnerRecordPermissions&#x60; and &#x60;OwnerRecordPermissions&#x60; 
   * @alias module:model/RecordBasePermissions
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>RecordBasePermissions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RecordBasePermissions} obj Optional instance to populate.
   * @return {module:model/RecordBasePermissions} The populated <code>RecordBasePermissions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('type')) {
        obj['type'] = RecordType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('create')) {
        obj['create'] = ApiClient.convertToType(data['create'], 'Boolean');
      }
      if (data.hasOwnProperty('edit')) {
        obj['edit'] = ApiClient.convertToType(data['edit'], 'Boolean');
      }
      if (data.hasOwnProperty('remove')) {
        obj['remove'] = ApiClient.convertToType(data['remove'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * The record type
   * @member {module:model/RecordType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Can the authenticated user create new records of this type?
   * @member {Boolean} create
   */
  exports.prototype['create'] = undefined;
  /**
   * Can the authenticated user edit records of this type?
   * @member {Boolean} edit
   */
  exports.prototype['edit'] = undefined;
  /**
   * Can the authenticated user remove records of this type?
   * @member {Boolean} remove
   */
  exports.prototype['remove'] = undefined;



  return exports;
}));


