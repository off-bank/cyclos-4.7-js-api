/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.PhoneConfiguration = factory(root.Cyclos471Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PhoneConfiguration model module.
   * @module model/PhoneConfiguration
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>PhoneConfiguration</code>.
   * Contains configuration information related to phones
   * @alias module:model/PhoneConfiguration
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>PhoneConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PhoneConfiguration} obj Optional instance to populate.
   * @return {module:model/PhoneConfiguration} The populated <code>PhoneConfiguration</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('alwaysShowInternationalNumber')) {
        obj['alwaysShowInternationalNumber'] = ApiClient.convertToType(data['alwaysShowInternationalNumber'], 'Boolean');
      }
      if (data.hasOwnProperty('extensionEnabled')) {
        obj['extensionEnabled'] = ApiClient.convertToType(data['extensionEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('smsEnabled')) {
        obj['smsEnabled'] = ApiClient.convertToType(data['smsEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('landLineExample')) {
        obj['landLineExample'] = ApiClient.convertToType(data['landLineExample'], 'String');
      }
      if (data.hasOwnProperty('mobileExample')) {
        obj['mobileExample'] = ApiClient.convertToType(data['mobileExample'], 'String');
      }
    }
    return obj;
  }

  /**
   * The 2-letter country code used by default for numbers. Unless an international number is specified (using the `+` prefix), the phone number is assumed to belong to this country. 
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * Indicates the it is configured to always format numbers using the international format. If set to false, numbers will be formatted in the national format. 
   * @member {Boolean} alwaysShowInternationalNumber
   */
  exports.prototype['alwaysShowInternationalNumber'] = undefined;
  /**
   * Indicates whether the extension is enabled for land-line phones
   * @member {Boolean} extensionEnabled
   */
  exports.prototype['extensionEnabled'] = undefined;
  /**
   * Indicates whether outbound SMS is enabled in Cyclos
   * @member {Boolean} smsEnabled
   */
  exports.prototype['smsEnabled'] = undefined;
  /**
   * An example phone number for a land-line phone
   * @member {String} landLineExample
   */
  exports.prototype['landLineExample'] = undefined;
  /**
   * An example phone number for a mobile phone
   * @member {String} mobileExample
   */
  exports.prototype['mobileExample'] = undefined;



  return exports;
}));


