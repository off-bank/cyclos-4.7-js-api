/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountWithCurrency', 'model/OwnerRecordPermissions', 'model/TokenType', 'model/UserContactPermissions', 'model/UserMarketplacePermissions', 'model/UserPaymentPermissions', 'model/UserProfilePermissions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountWithCurrency'), require('./OwnerRecordPermissions'), require('./TokenType'), require('./UserContactPermissions'), require('./UserMarketplacePermissions'), require('./UserPaymentPermissions'), require('./UserProfilePermissions'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.UserPermissions = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.AccountWithCurrency, root.Cyclos471Api.OwnerRecordPermissions, root.Cyclos471Api.TokenType, root.Cyclos471Api.UserContactPermissions, root.Cyclos471Api.UserMarketplacePermissions, root.Cyclos471Api.UserPaymentPermissions, root.Cyclos471Api.UserProfilePermissions);
  }
}(this, function(ApiClient, AccountWithCurrency, OwnerRecordPermissions, TokenType, UserContactPermissions, UserMarketplacePermissions, UserPaymentPermissions, UserProfilePermissions) {
  'use strict';




  /**
   * The UserPermissions model module.
   * @module model/UserPermissions
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>UserPermissions</code>.
   * Determines permission the authenticated have over a specific user
   * @alias module:model/UserPermissions
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>UserPermissions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserPermissions} obj Optional instance to populate.
   * @return {module:model/UserPermissions} The populated <code>UserPermissions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('profile')) {
        obj['profile'] = UserProfilePermissions.constructFromObject(data['profile']);
      }
      if (data.hasOwnProperty('contact')) {
        obj['contact'] = UserContactPermissions.constructFromObject(data['contact']);
      }
      if (data.hasOwnProperty('marketplace')) {
        obj['marketplace'] = UserMarketplacePermissions.constructFromObject(data['marketplace']);
      }
      if (data.hasOwnProperty('accounts')) {
        obj['accounts'] = ApiClient.convertToType(data['accounts'], [AccountWithCurrency]);
      }
      if (data.hasOwnProperty('payment')) {
        obj['payment'] = UserPaymentPermissions.constructFromObject(data['payment']);
      }
      if (data.hasOwnProperty('records')) {
        obj['records'] = ApiClient.convertToType(data['records'], [OwnerRecordPermissions]);
      }
      if (data.hasOwnProperty('tokens')) {
        obj['tokens'] = ApiClient.convertToType(data['tokens'], [TokenType]);
      }
      if (data.hasOwnProperty('personalizeNfcTokens')) {
        obj['personalizeNfcTokens'] = ApiClient.convertToType(data['personalizeNfcTokens'], [TokenType]);
      }
    }
    return obj;
  }

  /**
   * Permissions over the user profile
   * @member {module:model/UserProfilePermissions} profile
   */
  exports.prototype['profile'] = undefined;
  /**
   * Permissions over a contact
   * @member {module:model/UserContactPermissions} contact
   */
  exports.prototype['contact'] = undefined;
  /**
   * Permissions over the user marketplace
   * @member {module:model/UserMarketplacePermissions} marketplace
   */
  exports.prototype['marketplace'] = undefined;
  /**
   * Accounts which can be viewed by the authenticated user
   * @member {Array.<module:model/AccountWithCurrency>} accounts
   */
  exports.prototype['accounts'] = undefined;
  /**
   * Permissions for payments regarding this user
   * @member {module:model/UserPaymentPermissions} payment
   */
  exports.prototype['payment'] = undefined;
  /**
   * Records types the authenticated user can view over the given user 
   * @member {Array.<module:model/OwnerRecordPermissions>} records
   */
  exports.prototype['records'] = undefined;
  /**
   * Tokens the authenticated user can view over the given user 
   * @member {Array.<module:model/TokenType>} tokens
   */
  exports.prototype['tokens'] = undefined;
  /**
   * NFC tokens the authenticated user can personalize for the given user 
   * @member {Array.<module:model/TokenType>} personalizeNfcTokens
   */
  exports.prototype['personalizeNfcTokens'] = undefined;



  return exports;
}));


