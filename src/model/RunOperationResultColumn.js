/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.RunOperationResultColumn = factory(root.Cyclos471Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The RunOperationResultColumn model module.
   * @module model/RunOperationResultColumn
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>RunOperationResultColumn</code>.
   * A column definition when the result type is &#x60;resultPage&#x60;. 
   * @alias module:model/RunOperationResultColumn
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>RunOperationResultColumn</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RunOperationResultColumn} obj Optional instance to populate.
   * @return {module:model/RunOperationResultColumn} The populated <code>RunOperationResultColumn</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('header')) {
        obj['header'] = ApiClient.convertToType(data['header'], 'String');
      }
      if (data.hasOwnProperty('property')) {
        obj['property'] = ApiClient.convertToType(data['property'], 'String');
      }
      if (data.hasOwnProperty('align')) {
        obj['align'] = ApiClient.convertToType(data['align'], 'String');
      }
      if (data.hasOwnProperty('valign')) {
        obj['valign'] = ApiClient.convertToType(data['valign'], 'String');
      }
      if (data.hasOwnProperty('width')) {
        obj['width'] = ApiClient.convertToType(data['width'], 'String');
      }
    }
    return obj;
  }

  /**
   * The column header text
   * @member {String} header
   */
  exports.prototype['header'] = undefined;
  /**
   * Contains the property name for each row element to access this column value. 
   * @member {String} property
   */
  exports.prototype['property'] = undefined;
  /**
   * The horizontal alignment. The actual values depend on the semantics of both the script result and the client application. 
   * @member {String} align
   */
  exports.prototype['align'] = undefined;
  /**
   * The vertical alignment. The actual values depend on the semantics of both the script result and the client application. 
   * @member {String} valign
   */
  exports.prototype['valign'] = undefined;
  /**
   * The column width. The actual values depend on the semantics of both the script result and the client application. 
   * @member {String} width
   */
  exports.prototype['width'] = undefined;



  return exports;
}));


