/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataForLogin', 'model/DateFormatEnum', 'model/GroupForRegistration', 'model/MobileBaseData', 'model/MobileTranslations', 'model/NumberFormatEnum', 'model/TimeFormatEnum', 'model/UIElementWithContent'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DataForLogin'), require('./DateFormatEnum'), require('./GroupForRegistration'), require('./MobileBaseData'), require('./MobileTranslations'), require('./NumberFormatEnum'), require('./TimeFormatEnum'), require('./UIElementWithContent'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.DataForMobileGuest = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.DataForLogin, root.Cyclos471Api.DateFormatEnum, root.Cyclos471Api.GroupForRegistration, root.Cyclos471Api.MobileBaseData, root.Cyclos471Api.MobileTranslations, root.Cyclos471Api.NumberFormatEnum, root.Cyclos471Api.TimeFormatEnum, root.Cyclos471Api.UIElementWithContent);
  }
}(this, function(ApiClient, DataForLogin, DateFormatEnum, GroupForRegistration, MobileBaseData, MobileTranslations, NumberFormatEnum, TimeFormatEnum, UIElementWithContent) {
  'use strict';




  /**
   * The DataForMobileGuest model module.
   * @module model/DataForMobileGuest
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>DataForMobileGuest</code>.
   * Contains definitions for the data for UI for guests   
   * @alias module:model/DataForMobileGuest
   * @class
   * @implements module:model/MobileBaseData
   */
  var exports = function() {
    var _this = this;

    MobileBaseData.call(_this);




  };

  /**
   * Constructs a <code>DataForMobileGuest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataForMobileGuest} obj Optional instance to populate.
   * @return {module:model/DataForMobileGuest} The populated <code>DataForMobileGuest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      MobileBaseData.constructFromObject(data, obj);
      if (data.hasOwnProperty('dataForLogin')) {
        obj['dataForLogin'] = DataForLogin.constructFromObject(data['dataForLogin']);
      }
      if (data.hasOwnProperty('groupsForRegistration')) {
        obj['groupsForRegistration'] = ApiClient.convertToType(data['groupsForRegistration'], [GroupForRegistration]);
      }
      if (data.hasOwnProperty('header')) {
        obj['header'] = UIElementWithContent.constructFromObject(data['header']);
      }
      if (data.hasOwnProperty('footer')) {
        obj['footer'] = UIElementWithContent.constructFromObject(data['footer']);
      }
    }
    return obj;
  }

  /**
   * The data for user login
   * @member {module:model/DataForLogin} dataForLogin
   */
  exports.prototype['dataForLogin'] = undefined;
  /**
   * The list of groups the authenticated user can use to perform a new user registration
   * @member {Array.<module:model/GroupForRegistration>} groupsForRegistration
   */
  exports.prototype['groupsForRegistration'] = undefined;
  /**
   * The mobile header
   * @member {module:model/UIElementWithContent} header
   */
  exports.prototype['header'] = undefined;
  /**
   * The mobile footer
   * @member {module:model/UIElementWithContent} footer
   */
  exports.prototype['footer'] = undefined;

  // Implement MobileBaseData interface:
  /**
   * The version of the Cyclos server
   * @member {String} cyclosVersion
   */
exports.prototype['cyclosVersion'] = undefined;

  /**
   * The current client time according to the server
   * @member {Date} currentClientTime
   */
exports.prototype['currentClientTime'] = undefined;

  /**
   * The format for numbers Possible values are: * commaAsDecimal: 9.999,99 * periodAsDecimal: 9,999.99 
   * @member {module:model/NumberFormatEnum} numberFormat
   */
exports.prototype['numberFormat'] = undefined;

  /**
   * The format for dates Possible values are: * dmySlash: DD/MM/YYYY * dmyDash: DD-MM-YYYY * dmyPeriod: DD.MM.YYYY * mdySlash: MM/DD/YYYY * mdyDash: MM-DD-YYYY * mdyPeriod: MM.DD.YYYY * ymdSlash: YYYY/MM/DD * ymdDash: YYYY-MM-DD * ymdPeriod: YYYY.MM.DD 
   * @member {module:model/DateFormatEnum} dateFormat
   */
exports.prototype['dateFormat'] = undefined;

  /**
   * The format for times Possible values are: * h24: 24-hour * h12: 12-hour with AM/PM indicator 
   * @member {module:model/TimeFormatEnum} timeFormat
   */
exports.prototype['timeFormat'] = undefined;

  /**
   * The theme guests. Only returned when changed.
   * @member {module:model/UIElementWithContent} theme
   */
exports.prototype['theme'] = undefined;

  /**
   * The mobile translations. Only returned when changed.
   * @member {module:model/MobileTranslations} translations
   */
exports.prototype['translations'] = undefined;



  return exports;
}));


