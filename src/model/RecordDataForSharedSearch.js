/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BasicProfileFieldInput', 'model/CustomFieldDetailed', 'model/RecordDataForSearch', 'model/RecordType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BasicProfileFieldInput'), require('./CustomFieldDetailed'), require('./RecordDataForSearch'), require('./RecordType'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.RecordDataForSharedSearch = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.BasicProfileFieldInput, root.Cyclos471Api.CustomFieldDetailed, root.Cyclos471Api.RecordDataForSearch, root.Cyclos471Api.RecordType);
  }
}(this, function(ApiClient, BasicProfileFieldInput, CustomFieldDetailed, RecordDataForSearch, RecordType) {
  'use strict';




  /**
   * The RecordDataForSharedSearch model module.
   * @module model/RecordDataForSharedSearch
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>RecordDataForSharedSearch</code>.
   * Data for searching records with shared fields
   * @alias module:model/RecordDataForSharedSearch
   * @class
   * @implements module:model/RecordDataForSearch
   */
  var exports = function() {
    var _this = this;

    RecordDataForSearch.call(_this);

  };

  /**
   * Constructs a <code>RecordDataForSharedSearch</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RecordDataForSharedSearch} obj Optional instance to populate.
   * @return {module:model/RecordDataForSharedSearch} The populated <code>RecordDataForSharedSearch</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      RecordDataForSearch.constructFromObject(data, obj);
      if (data.hasOwnProperty('recordTypes')) {
        obj['recordTypes'] = ApiClient.convertToType(data['recordTypes'], [RecordType]);
      }
    }
    return obj;
  }

  /**
   * The possible record types. 
   * @member {Array.<module:model/RecordType>} recordTypes
   */
  exports.prototype['recordTypes'] = undefined;

  // Implement RecordDataForSearch interface:
  /**
   * The record type
   * @member {module:model/RecordType} type
   */
exports.prototype['type'] = undefined;

  /**
   * Can the authenticated user create new records of this type?
   * @member {Boolean} create
   */
exports.prototype['create'] = undefined;

  /**
   * Can the authenticated user edit records of this type?
   * @member {Boolean} edit
   */
exports.prototype['edit'] = undefined;

  /**
   * Can the authenticated user remove records of this type?
   * @member {Boolean} remove
   */
exports.prototype['remove'] = undefined;

  /**
   * The list of custom profile fields that are either to be used as search filter (if its internal name is present on `fieldsInSearch`) and / or in the result list (if its internal name is present on `fieldsInList`)  
   * @member {Array.<module:model/CustomFieldDetailed>} customFields
   */
exports.prototype['customFields'] = undefined;

  /**
   * The internal names of the custom fields that should be used as search filters (separated fields, not keywords) 
   * @member {Array.<String>} fieldsInSearch
   */
exports.prototype['fieldsInSearch'] = undefined;

  /**
   * The internal names of the custom fields that will be returned together with each record, and should be shown in the result list 
   * @member {Array.<String>} fieldsInList
   */
exports.prototype['fieldsInList'] = undefined;

  /**
   * The list of basic user profile fields that can be used as search filters. Only returned if searching user records. 
   * @member {Array.<module:model/BasicProfileFieldInput>} basicProfileFields
   */
exports.prototype['basicProfileFields'] = undefined;

  /**
   * The list of custom user profile fields that can be used as search filters. Only returned if searching user records. 
   * @member {Array.<module:model/CustomFieldDetailed>} customProfileFields
   */
exports.prototype['customProfileFields'] = undefined;



  return exports;
}));


