/**
 * Cyclos 4.7.1 API
 * The REST API for Cyclos 4.7.1
 *
 * OpenAPI spec version: 4.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountWithCurrency', 'model/BaseTransferDataForSearch', 'model/CustomField', 'model/CustomFieldDetailed', 'model/EntityReference', 'model/Group', 'model/PreselectedPeriod', 'model/TransferFilter', 'model/TransferStatusFlow', 'model/User'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountWithCurrency'), require('./BaseTransferDataForSearch'), require('./CustomField'), require('./CustomFieldDetailed'), require('./EntityReference'), require('./Group'), require('./PreselectedPeriod'), require('./TransferFilter'), require('./TransferStatusFlow'), require('./User'));
  } else {
    // Browser globals (root is window)
    if (!root.Cyclos471Api) {
      root.Cyclos471Api = {};
    }
    root.Cyclos471Api.DataForAccountHistory = factory(root.Cyclos471Api.ApiClient, root.Cyclos471Api.AccountWithCurrency, root.Cyclos471Api.BaseTransferDataForSearch, root.Cyclos471Api.CustomField, root.Cyclos471Api.CustomFieldDetailed, root.Cyclos471Api.EntityReference, root.Cyclos471Api.Group, root.Cyclos471Api.PreselectedPeriod, root.Cyclos471Api.TransferFilter, root.Cyclos471Api.TransferStatusFlow, root.Cyclos471Api.User);
  }
}(this, function(ApiClient, AccountWithCurrency, BaseTransferDataForSearch, CustomField, CustomFieldDetailed, EntityReference, Group, PreselectedPeriod, TransferFilter, TransferStatusFlow, User) {
  'use strict';




  /**
   * The DataForAccountHistory model module.
   * @module model/DataForAccountHistory
   * @version 4.7.1
   */

  /**
   * Constructs a new <code>DataForAccountHistory</code>.
   * Contains data used to search the history of a given account
   * @alias module:model/DataForAccountHistory
   * @class
   * @implements module:model/BaseTransferDataForSearch
   */
  var exports = function() {
    var _this = this;

    BaseTransferDataForSearch.call(_this);




  };

  /**
   * Constructs a <code>DataForAccountHistory</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataForAccountHistory} obj Optional instance to populate.
   * @return {module:model/DataForAccountHistory} The populated <code>DataForAccountHistory</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      BaseTransferDataForSearch.constructFromObject(data, obj);
      if (data.hasOwnProperty('account')) {
        obj['account'] = AccountWithCurrency.constructFromObject(data['account']);
      }
      if (data.hasOwnProperty('customFieldsInSearch')) {
        obj['customFieldsInSearch'] = ApiClient.convertToType(data['customFieldsInSearch'], [CustomFieldDetailed]);
      }
      if (data.hasOwnProperty('customFieldsInList')) {
        obj['customFieldsInList'] = ApiClient.convertToType(data['customFieldsInList'], [CustomField]);
      }
      if (data.hasOwnProperty('transferStatusFlows')) {
        obj['transferStatusFlows'] = ApiClient.convertToType(data['transferStatusFlows'], [TransferStatusFlow]);
      }
    }
    return obj;
  }

  /**
   * Information about this specific account
   * @member {module:model/AccountWithCurrency} account
   */
  exports.prototype['account'] = undefined;
  /**
   * Detailed references for custom fields that are set to be used as search filters  
   * @member {Array.<module:model/CustomFieldDetailed>} customFieldsInSearch
   */
  exports.prototype['customFieldsInSearch'] = undefined;
  /**
   * Simple references for custom fields that are set to be used on the search result list  
   * @member {Array.<module:model/CustomField>} customFieldsInList
   */
  exports.prototype['customFieldsInList'] = undefined;
  /**
   * References to the allowed transfer status flows for this account  
   * @member {Array.<module:model/TransferStatusFlow>} transferStatusFlows
   */
  exports.prototype['transferStatusFlows'] = undefined;

  // Implement BaseTransferDataForSearch interface:
  /**
   * References for transfer filters, which can be used to filter entries by transfer type 
   * @member {Array.<module:model/TransferFilter>} transferFilters
   */
exports.prototype['transferFilters'] = undefined;

  /**
   * References for channels which can be used to filter entries by transfers generated on a specific channel. Is only returned if the authenticated user is an administrator. 
   * @member {Array.<module:model/EntityReference>} channels
   */
exports.prototype['channels'] = undefined;

  /**
   * Groups that can be used to filter entries, so that only transfers from or to users of those groups are returned on search. Is only returned if the authenticated user is an administrator. 
   * @member {Array.<module:model/Group>} groups
   */
exports.prototype['groups'] = undefined;

  /**
   * References for access clients which can be used to filter entries by transfers generated by a specific access client  
   * @member {Array.<module:model/EntityReference>} accessClients
   */
exports.prototype['accessClients'] = undefined;

  /**
   * References for operators, which can be used to filter entries by transfers performed or received by that specific operator  
   * @member {Array.<module:model/User>} operators
   */
exports.prototype['operators'] = undefined;

  /**
   * Contains the pre-selected period filter ranges according to the Cyclos configuration   
   * @member {Array.<module:model/PreselectedPeriod>} preselectedPeriods
   */
exports.prototype['preselectedPeriods'] = undefined;



  return exports;
}));


